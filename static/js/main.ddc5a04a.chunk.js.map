{"version":3,"sources":["components/pages/Begin.js","utility/grainSizeObj.js","components/pages/GrainSize.js","components/pages/Color.js","utility/smallerObjs.js","components/pages/Density.js","components/pages/Moisture.js","components/pages/Plasticity.js","components/pages/Cohesiveness.js","components/pages/SedimentaryStructure.js","components/pages/Weathering.js","components/pages/DepositionalEnv.js","components/pages/StratName.js","components/pages/StratContact.js","components/pages/End.js","components/parts/Header.js","components/parts/Footer.js","components/parts/Drawer.js","components/parts/FormCompiler.js","utility/muiTheme.js","App.js","serviceWorker.js","index.js"],"names":["Begin","props","step","Slide","direction","in","Paper","variant","elevation","Typography","Divider","grainSizeObj","question","options","id","descrip","symbol","name","GrainSize","handleChange","useState","tabs","setTabs","path","setPath","hasOptions","hasOwnProperty","hasQuestion","tabHasSymbol","answer","concat","toUpperCase","currentQuestion","currentDescription","optionsTabs","Tabs","value","onChange","e","newtab","centered","map","index","Tab","key","label","selectButton","Button","onClick","newPath","updatePath","endOfLine","size","Color","outputStep","setValue","submitColors","TextField","multiline","rows","placeholder","output","event","target","defaultValue","moistureObj","plasticityObj","cohesivenessObj","sedimentaryStructureObj","weatheringObj","questions","densityObj","nValue","values","n","stratContactObj","Density","k","nRadios","FormControl","component","RadioGroup","style","justifyContent","row","aria-label","FormControlLabel","control","Radio","submitDensity","Tooltip","title","placement","Moisture","currentDescrip","submitMoisture","Plasticity","submitPlasticity","Cohesiveness","submitCohesion","SedimentaryStructure","submitStructure","Weathering","boxes","setBoxes","makeBoxes","start","num","length","allQs","forEach","q","o","useEffect","pushString","tempStr","push","join","activeTab","setActiveTab","checkBoxes","FormGroup","Checkbox","checked","newBox","newArrVal","handleBoxes","resetBoxes","marginBottom","RotateLeftRounded","submitBoxes","DepositionalEnv","submitEnv","StratName","submitName","StratContact","submitContact","useStyles","makeStyles","theme","expand","flex","textAlign","contrast","color","palette","secondary","contrastText","End","classes","generateAnswer","className","menu","marginRight","spacing","backgroundColor","primary","light","Header","toggleDrawer","handleReset","disableButton","toFinish","resetButton","finishButton","disabled","DoneRounded","AppBar","position","Toolbar","IconButton","edge","steps","activeStep","moveForward","moveBackward","backButton","KeyboardArrowLeft","nextButton","KeyboardArrowRight","disableGutters","MobileStepper","alignSelf","marginTop","NavDrawer","drawer","drawerList","moveByIndex","Drawer","open","anchor","MenuOpen","List","text","ListItem","button","ListItemText","FormCompiler","questionList","setStep","setOutput","setDrawer","prev","setAnswer","React","createElement","input","val","currentTarget","undefined","item","Container","maxWidth","i","defaultTheme","createMuiTheme","main","green","blueGrey","background","paper","default","typography","h3","fontWeight","margin","h5","h6","paddingLeft","paddingRight","body1","subtitle1","fontStyle","overrides","MuiAppBar","root","paddingBottom","MuiButton","outlined","padding","borderColor","borderWidth","dark","contained","containedSizeSmall","width","border","MuiContainer","height","display","flexDirection","MuiDrawer","paperAnchorDockedLeft","borderRight","MuiListItem","borderBottom","MuiToolbar","MuiPaper","elevation7","boxShadow","MuiDivider","MuiTabs","indicator","MuiTab","wrapper","fontSize","MuiTextField","MuiButtonGroup","MuiButtonBase","MuiTooltip","tooltip","MuiMobileStepper","dot","transform","MuiSvgIcon","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddc5a04a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography, Paper, Slide, Divider } from \"../../utility/themeIndex\";\r\n\r\nconst Begin = (props) => {\r\n  const { step } = props;\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 0}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          Welcome to the Hand Sample Generator!\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"h6\">\r\n          Answer each question to produce a sample description at the end of the\r\n          survey.\r\n        </Typography>\r\n        <Typography variant=\"h6\">\r\n          You can produce the output early by clicking the Finish button.\r\n        </Typography>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Begin;\r\n","const grainSizeObj = {\r\n  question: \"Is the majority of the sample coarse or fine grained?\",\r\n  options: [\r\n    {\r\n      id: \"coarse\",\r\n      descrip: \"The sample is >50% coarse grains, <50% fines\",\r\n      question: \"What is the sand to gravel ratio?\",\r\n      options: [\r\n        {\r\n          id: \"gravel\",\r\n          descrip: \"The amount of gravel > sand\",\r\n          question: \"The sample is made of what % of fine grain sediments?\",\r\n          options: [\r\n            {\r\n              id: 5,\r\n              descrip: \"sample contains < 5% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GW\",\r\n                      name: \"well graded gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GW\",\r\n                      name: \"well graded gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GP\",\r\n                      name: \"poorly graded gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GP\",\r\n                      name: \"poorly graded gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 10,\r\n              descrip: \"sample contains 6-14% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Are the fines non-plastic or plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GW-GM\",\r\n                          name: \"well graded gravel with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GW-GM\",\r\n                          name: \"well graded gravel with silt and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GW-GC\",\r\n                          name: \"well graded gravel with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GW-GC\",\r\n                          name: \"well graded gravel with clay and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Are fines plastic or non-plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GP-GM\",\r\n                          name: \"poorly graded gravel with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GP-GM\",\r\n                          name: \"poorly graded gravel with silt and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GP-GC\",\r\n                          name: \"poorly graded gravel with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GP-GC\",\r\n                          name: \"poorly graded gravel with clay and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 15,\r\n              descrip: \"sample contains > 15% fines\",\r\n              question: \"Are the fines non-plastic or plastic?\",\r\n              options: [\r\n                {\r\n                  id: \"nonplastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GM\",\r\n                      name: \"silty gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GM\",\r\n                      name: \"silty gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"plastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GC\",\r\n                      name: \"clayey gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GC\",\r\n                      name: \"clayey gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"sand\",\r\n          descrip: \"The amount of gravel < sand\",\r\n          question: \"The sample is made of what % of fine grain sediments?\",\r\n          options: [\r\n            {\r\n              id: 5,\r\n              descrip: \"sample contains < 5% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"SW\",\r\n                      name: \"well graded sand\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"SW\",\r\n                      name: \"well graded sand with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"SP\",\r\n                      name: \"poorly graded sand\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"SP\",\r\n                      name: \"poorly graded sand with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 10,\r\n              descrip: \"sample contains 6-14% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Are the fines non-plastic or plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SW-SM\",\r\n                          name: \"well graded sand with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SW-SM\",\r\n                          name: \"well graded sand with silt and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SW-SC\",\r\n                          name: \"well graded sand with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SW-SC\",\r\n                          name: \"well graded sand with clay and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Are fines plastic or non-plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SP-SM\",\r\n                          name: \"poorly graded sand with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SP-SM\",\r\n                          name: \"poorly graded sand with silt and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SP-SC\",\r\n                          name: \"poorly graded sand with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SP-SC\",\r\n                          name: \"poorly graded sand with clay and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 15,\r\n              descrip: \"sample contains > 15% fines\",\r\n              question: \"Are the fines non-plastic or plastic?\",\r\n              options: [\r\n                {\r\n                  id: \"nonplastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"SM\",\r\n                      name: \"silty gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"SM\",\r\n                      name: \"silty gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"plastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"SC\",\r\n                      name: \"clayey sand\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"SC\",\r\n                      name: \"clayey sand with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"fine\",\r\n      descrip: \"The sample is <50% coarse graines, >50% fines\",\r\n      question: \"Does organic content influence soil properties?\",\r\n      options: [\r\n        {\r\n          id: \"yes\",\r\n          descrip:\r\n            \"The soil exhibits properties indicative of biochemical reactions such as oxidation patterns, organic odors, and physical matter such as roots, compost, and microbes.\",\r\n          question: \"Is the sample > or < 30% coarse grained sediments?\",\r\n          options: [\r\n            {\r\n              id: \"<30\",\r\n              question:\r\n                \"Is the sample <15% or 15-25% coarse grained sediments?\",\r\n              descrip: \"The sample is <30% coarse sediemnt\",\r\n              options: [\r\n                {\r\n                  id: \"<15%\",\r\n                  symbol: \"OL/OH\",\r\n                  name: \"organic soil\",\r\n                },\r\n                {\r\n                  id: \"15-25%\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is 15-25% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"organic soil with sand\",\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"organic soil with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: \">30\",\r\n              question: \"Is the sample more sand or gravel?\",\r\n              descrip: \"The sample is >30% coarse sediemnt\",\r\n              options: [\r\n                {\r\n                  id: \"% sand > % gravel\",\r\n                  question: \"Is the sample more or less than 15% gravel?\",\r\n                  descrip: \"The sample is more sand than gravel\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"sandy organic soil\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"sandy organic soil with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"% sand < % gravel\",\r\n                  question: \"Is the sample more or less than 15% gravel?\",\r\n                  descrip: \"The sample is more gravel than sand\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"gravelly organic soil\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"gravelly organic soil with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"no\",\r\n          descrip: \"The soil contains no organic matter.\",\r\n          question: \"What is the plasticity of the sample?\",\r\n          options: [\r\n            {\r\n              id: \"ML\",\r\n              descrip: \"Nonplastic to Low\",\r\n              question: \"Is the sample > or < 30% coarse sediment?\",\r\n              options: [\r\n                {\r\n                  id: \"<30\",\r\n                  question: \"What is the % coarse grain sediment?\",\r\n                  descrip: \"The sample is <30% coarse sediment\",\r\n                  options: [\r\n                    { id: \"<15%\", symbol: \"ML\", name: \"silt\" },\r\n                    {\r\n                      id: \"15-25%\",\r\n                      question: \"Is the sample more sand or gravel?\",\r\n                      descrip: \"The sample is 15-25% sand and gravel\",\r\n                      options: [\r\n                        {\r\n                          id: \"% sand > % gravel\",\r\n                          symbol: \"ML\",\r\n                          name: \"silt with sand\",\r\n                        },\r\n                        {\r\n                          id: \"% sand < % gravel\",\r\n                          symbol: \"ML\",\r\n                          name: \"silt with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \">30\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is >30% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      question: \"What percent of the sample is gravel?\",\r\n                      descrip: \"The sample is more sand than gravel\",\r\n                      options: [\r\n                        { id: \"<15% gravel\", symbol: \"ML\", name: \"sandy silt\" },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"ML\",\r\n                          name: \"sandy silt with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      question: \"What percent of the sample is sand?\",\r\n                      descrip: \"The sample is more gravel than sand\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"ML\",\r\n                          name: \"gravelly silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"ML\",\r\n                          name: \"gravelly silt with sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: \"CL\",\r\n              descrip: \"Medium Plasticity\",\r\n              question: \"Is the sample > or < 30% coarse sediment?\",\r\n              options: [\r\n                {\r\n                  id: \"<30\",\r\n                  question: \"What % of the sample is coarse grained sediment?\",\r\n                  descrip: \"The sample is <30% coarse sediment\",\r\n                  options: [\r\n                    { id: \"<15%\", symbol: \"CL\", name: \"lean clay\" },\r\n                    {\r\n                      id: \"15-25%\",\r\n                      question: \"Is the sample more sand or gravel?\",\r\n                      descrip: \"The sample is 15-25% coarse sediment\",\r\n                      options: [\r\n                        {\r\n                          id: \"% sand > % gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"lean clay with sand\",\r\n                        },\r\n                        {\r\n                          id: \"% sand < % gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"lean clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \">30\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is >30% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      question: \"Does the sample have > or < 15% gravel?\",\r\n                      descrip: \"The sample is more sand than gravel\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"sandy lean clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"sandy lean clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      question: \"Does the sample have > or < 15% sand?\",\r\n                      descrip: \"The sample is more gravel than sand\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"CL\",\r\n                          name: \"gravelly lean clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"CL\",\r\n                          name: \"gravelly lean clay with sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: \"CH\",\r\n              question: \"Is the sample > or < 30% coarse sediment?\",\r\n              descrip: \"High Plastcity\",\r\n              options: [\r\n                {\r\n                  id: \"<30\",\r\n                  question: \"What % of the sample is coarse grained sediment?\",\r\n                  descrip: \"The sample is <30% coarse sediment\",\r\n                  options: [\r\n                    { id: \"<15%\", symbol: \"CH\", name: \"fat clay\" },\r\n                    {\r\n                      id: \"15-25%\",\r\n                      question: \"Is the sample more sand or gravel?\",\r\n                      descrip: \"The sample is 15-25% coarse sediment\",\r\n                      options: [\r\n                        {\r\n                          id: \"% sand > % gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"fat clay with sand\",\r\n                        },\r\n                        {\r\n                          id: \"% sand < % gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"fat clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \">30\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is >30% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      question: \"Does the sample have > or < 15% gravel?\",\r\n                      descrip: \"The sample is more sand than gravel\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"sandy fat clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"sandy fat clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      question: \"Does the sample have > or < 15% sand?\",\r\n                      descrip: \"The sample is more gravel than sand\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"CH\",\r\n                          name: \"gravelly fat clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"CH\",\r\n                          name: \"gravelly fat clay with sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default grainSizeObj;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Slide,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Button,\r\n} from \"../../utility/themeIndex\";\r\nimport grainSizeObj from \"../../utility/grainSizeObj\";\r\n//import as JSON and parse for increase performance\r\n//previous solution to work down question line: hold string values in array\r\n//https://stackoverflow.com/questions/6393943/convert-javascript-string-in-dot-notation-into-an-object-reference\r\n\r\nconst GrainSize = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  //used for index matching\r\n  const [tabs, setTabs] = useState(0);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  const [path, setPath] = useState(grainSizeObj);\r\n  function updatePath() {\r\n    let newPath = path.options[tabs];\r\n    setPath(newPath);\r\n    setTabs(0);\r\n  }\r\n\r\n  let hasOptions = path.hasOwnProperty(\"options\");\r\n  let hasQuestion = path.hasOwnProperty(\"question\");\r\n  let tabHasSymbol = path.options[tabs].hasOwnProperty(\"symbol\");\r\n  // let value = tabHasSymbol && path.options[tabs].id;\r\n  let answer =\r\n    tabHasSymbol &&\r\n    path.options[tabs].name\r\n      .concat(\" (\", path.options[tabs].symbol, \")\")\r\n      .toUpperCase();\r\n\r\n  const currentQuestion = hasQuestion && (\r\n    <Typography variant=\"h3\">{path.question}</Typography>\r\n  );\r\n\r\n  const currentDescription = path.options[tabs].hasOwnProperty(\"descrip\") && (\r\n    <Typography variant=\"h6\">{path.options[tabs].descrip}</Typography>\r\n  );\r\n\r\n  const optionsTabs = hasOptions && (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {path.options.map((e, index) => (\r\n        <Tab key={index} label={`${e.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const selectButton = (\r\n    <Button variant=\"text\" onClick={() => updatePath()}>\r\n      select\r\n    </Button>\r\n  );\r\n\r\n  const endOfLine = (\r\n    <>\r\n      <Typography variant=\"subtitle1\">\r\n        The sample group name and symbol is:\r\n      </Typography>\r\n      <Typography variant=\"h6\">{answer}</Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        value={answer}\r\n        onClick={handleChange(answer)}\r\n      >\r\n        Submit Grain Size\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 1}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        {currentQuestion}\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        {currentDescription}\r\n        {tabHasSymbol ? endOfLine : selectButton}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default GrainSize;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Slide,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Color = (props) => {\r\n  const { step, outputStep, handleChange } = props;\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const submitColors = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Colors</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 2}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          Enter the colors that best represents the sample.\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">\r\n          *future version will have color selector\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <TextField\r\n          variant=\"filled\"\r\n          multiline={true}\r\n          rows=\"6\"\r\n          placeholder=\"Type all present Munsell scale colors from most to least prevalent\"\r\n          label={outputStep.output}\r\n          onChange={handleTextFieldChange}\r\n          defaultValue={outputStep.output}\r\n        />\r\n        {submitColors}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","const moistureObj = {\r\n  descrip: \"Moisture is a measure of liquid in a sample.\",\r\n  question: \"How much moisture is in the sample?\",\r\n  options: [\r\n    {\r\n      descrip: \"There is no water. Sample is dry.\",\r\n      id: \"Dry\",\r\n    },\r\n    {\r\n      descrip: \"The sample is slightly wet.\",\r\n      id: \"Moist\",\r\n    },\r\n    {\r\n      descrip: \"Water is visible and saturates the sample.\",\r\n      id: \"Wet\",\r\n    },\r\n  ],\r\n};\r\n\r\n//https://stackoverflow.com/questions/2242086/how-to-detect-the-screen-resolution-with-javascript\r\n//create a popover with circle of correct mm using method above\r\nconst plasticityObj = {\r\n  descrip:\r\n    \"The plasticity can be attributed to the rolling technique. This is the ability of a cylindrical roll of soil rolled between the fingers to hold a 6, 4, or 2mm diameter.\",\r\n  question: \"What is the plasticity of the sample?\",\r\n  options: [\r\n    {\r\n      id: \"non\",\r\n      descrip: \"Will NOT support a 6mm roll\",\r\n      answer: \"Non-plastic\",\r\n    },\r\n    {\r\n      id: \"low\",\r\n      descrip: \"Can support a 6mm roll, but not 4mm\",\r\n      answer: \"Low Plasticity\",\r\n    },\r\n    {\r\n      id: \"medium\",\r\n      descrip: \"Can support a 4mm roll, but not 2mm\",\r\n      answer: \"Medium Plasticity\",\r\n    },\r\n    {\r\n      id: \"high\",\r\n      descrip: \"Can support a 2mm roll\",\r\n      answer: \"High Plasticity\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst cohesivenessObj = {\r\n  descrip:\r\n    \"Cohesion is the component of shear strength and property applied to clay containing soils.\",\r\n  question: \"Does the sample exhibit cohesion?\",\r\n  options: [\r\n    {\r\n      id: \"yes\",\r\n      descrip: \"The sample can form a 6mm diamter with the roll test\",\r\n      answer: \"Cohesive\",\r\n    },\r\n    {\r\n      id: \"no\",\r\n      descrip: \"The sample can NOT form a 6mm diamter with the roll test\",\r\n      answer: \"Noncohesive\",\r\n    },\r\n  ],\r\n};\r\n\r\n//https://en.wikipedia.org/wiki/Sedimentary_structures\r\nconst sedimentaryStructureObj = {\r\n  descrip:\r\n    \"Having a sedimentary structure suggests the sample contains bedding from deposition.\",\r\n  question: \"Which sedimentary structure, if any, apply to the sample?\",\r\n  options: [\r\n    {\r\n      id: \"massive\",\r\n      descrip: \"The stratification is thick and homogeneous.\",\r\n      answer: \"Massive\",\r\n    },\r\n    {\r\n      id: \"thick\",\r\n      descrip: \"Beds are >30cm\",\r\n      answer: \"Thickly Bedded\",\r\n    },\r\n    {\r\n      id: \"bedded\",\r\n      descrip: \"Beds are 3-30cm\",\r\n      answer: \"Bedded\",\r\n    },\r\n    {\r\n      id: \"thin\",\r\n      descrip: \"Beds are 0.5-30cm\",\r\n      answer: \"Thinly Bedded\",\r\n    },\r\n    {\r\n      id: \"laminated\",\r\n      descrip: \"Beds are <0.5cm\",\r\n      answer: \"Laminated\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst weatheringObj = {\r\n  descrip:\r\n    \"Exposure to the water table or elements in the atmosphere can cause chemical alterations in a sample.\",\r\n  question: \"Check and submit all that apply for each question\",\r\n  questions: [\r\n    {\r\n      descrip: \"These are extra properties that may or may not be present\",\r\n      question: \"Enter the modifier symbol, if present.\",\r\n      options: [\r\n        {\r\n          name: \"mottled\",\r\n          descrip:\r\n            \"The soil contains colors not associated with the compositional properties\",\r\n          answer: \"M\",\r\n        },\r\n        {\r\n          name: \"jointed\",\r\n          descrip:\r\n            \"Has fractures, spaces, or cracks that show no offset across the fracture\",\r\n          answer: \"J\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      descrip: \"Is there any signs of oxidation present?\",\r\n      question: \"Enter the 1st symbol\",\r\n      options: [\r\n        {\r\n          name: \"oxidized\",\r\n          descrip: \"Signs of oxidation are present in the sample.\",\r\n          answer: \"O\",\r\n        },\r\n        {\r\n          name: \"reduced\",\r\n          descrip: \"Signs of Redux reactions are persent.\",\r\n          answer: \"R\",\r\n        },\r\n        {\r\n          name: \"unoxidized\",\r\n          descrip: \"No sign of oxidation or reduction.\",\r\n          answer: \"U\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      descrip:\r\n        \"An example could be discoloration from chemical reactions due to fluid movement within the sample.\",\r\n      question: \"Is there any evidence of leaching?\",\r\n      options: [\r\n        {\r\n          name: \"leaching\",\r\n          descrip: \"Has evidence of leaching\",\r\n          answer: \"L\",\r\n        },\r\n        {\r\n          name: \"unleached\",\r\n          descrip: \"No evidence of leaching\",\r\n          answer: \"U\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      descrip:\r\n        \"Fluid movement in cracks and faults can lead to secondary mineral precipitation\",\r\n      question: \"Any secondary carbonates?\",\r\n      options: [\r\n        {\r\n          name: \"carbonates\",\r\n          descrip:\r\n            \"The sample contains trace carbonate from secondary precipitation.\",\r\n          answer: \"2\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\n//https://munsell.com/color-products/color-communications-products/environmental-color-communication/munsell-soil-color-charts/\r\n//FUTURE FEATURE: add dropdown for different color pages\r\nconst colorObj = {\r\n  descrip: \"Using the Munsell Color Chart, determine the color of the sample.\",\r\n  question: \"What is the primary color?\",\r\n  options: {\r\n    \"5Y\": {\r\n      descrip: \"some yellow color\",\r\n      answer: \"5/2 5Y\",\r\n    },\r\n  },\r\n};\r\n\r\nconst densityObj = {\r\n  question: \"Is the sample coarse or fine grained?\",\r\n  descrip:\r\n    \"Correct terminology for a sample's density can be described based on the deposited grain sizes and corresponding N-value.\",\r\n  nValue:\r\n    \"The N value represents a standard value of energy required to penetrate 30 cm into soil by percussion drilling. It is standardized as the energy of a falling hammer from a height of 0,76 m or about 472,95 J. In North America it is considered that the percussion has a 60% energy efficiency, or 283.8J.  As SPT is the most most popular field test, the N value is widely used. Engineers correlate it to granular soils density and clays consistency. The N value is implemented on design using empirical correlations, specially in foundations design. Friction angle, cohesion, stiffness and even the risk of liquefaction can be estimated by the N value correlations.\",\r\n  options: [\r\n    {\r\n      id: \"coarse\",\r\n      values: [\r\n        { n: \"0-4\", descrip: \"very loose\" },\r\n        { n: \"5-10\", descrip: \"loose\" },\r\n        { n: \"11-29\", descrip: \"medium dense\" },\r\n        { n: \"30-49\", descrip: \"dense\" },\r\n        { n: \">50\", descrip: \"very dense\" },\r\n      ],\r\n    },\r\n    {\r\n      id: \"fine\",\r\n      values: [\r\n        { n: \"0-2\", descrip: \"very soft\" },\r\n        { n: \"3-4\", descrip: \"soft\" },\r\n        { n: \"5-8\", descrip: \"medium\" },\r\n        { n: \"9-15\", descrip: \"stiff\" },\r\n        { n: \"16-29\", descrip: \"very stiff\" },\r\n        { n: \">30\", descrip: \"hard\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst stratContactObj = {\r\n  descrip:\r\n    \"Evidence of a contact can be viewed in grainsize variation or mineral composition. Note that some gradational contats may be reflected over multiple bedding variations or a gradational change in sedimentary structures.\",\r\n  question: \"Are there are any notable stratigraphic contacts?\",\r\n  options: [\r\n    {\r\n      name: \"Sharp\",\r\n      descrip: \"The contact is over a distance of < 10cm\",\r\n      answer: \"Sharp Contact\",\r\n    },\r\n    {\r\n      name: \"Gradational\",\r\n      descrip: \"The contact is over a distance of > 10cm\",\r\n      answer: \"Gradational Contact\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport {\r\n  moistureObj,\r\n  plasticityObj,\r\n  cohesivenessObj,\r\n  sedimentaryStructureObj,\r\n  weatheringObj,\r\n  colorObj,\r\n  densityObj,\r\n  stratContactObj,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { densityObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Slide,\r\n  FormControl,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Divider,\r\n  Radio,\r\n  Tabs,\r\n  Tab,\r\n  Tooltip,\r\n  Button,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Density = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {densityObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} onClick={() => setTabs(index)} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const handleRadioSelect = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  //https://stackoverflow.com/questions/42522515/what-are-react-controlled-components-and-uncontrolled-components\r\n  const nRadios = tabs !== false && (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup\r\n        style={{ justifyContent: \"center\" }}\r\n        row\r\n        aria-label=\"n-value\"\r\n        name=\"density\"\r\n        value={value}\r\n        onChange={handleRadioSelect}\r\n      >\r\n        {densityObj.options[tabs].values.map((e) => (\r\n          <FormControlLabel\r\n            key={e.descrip}\r\n            value={`${e.descrip}(${e.n}n)`}\r\n            control={<Radio />}\r\n            label={`${e.n}: ${e.descrip}`}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n\r\n  const submitDensity = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Density</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 3}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{densityObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Tooltip title={densityObj.nValue} placement=\"bottom\">\r\n          <Typography variant=\"subtitle1\">{densityObj.descrip}</Typography>\r\n        </Tooltip>\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        {nRadios}\r\n        {submitDensity}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Density;\r\n","import React, { useState } from \"react\";\r\nimport { moistureObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Slide,\r\n  Typography,\r\n  Divider,\r\n  Tab,\r\n  Tabs,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Moisture = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && moistureObj.options[tabs].id;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {moistureObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\">{moistureObj.options[tabs].descrip}</Typography>\r\n  );\r\n\r\n  const submitMoisture = tabs !== false && (\r\n    <Button\r\n      value={value}\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      onClick={handleChange(value)}\r\n    >\r\n      Submit moisture\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 4}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{moistureObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{moistureObj.descrip}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        {currentDescrip}\r\n        {submitMoisture}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Moisture;\r\n","import React, { useState } from \"react\";\r\nimport { plasticityObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Plasticity = (props) => {\r\n  const { step, handleChange } = props;\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && plasticityObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {plasticityObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\">{plasticityObj.options[tabs].descrip}</Typography>\r\n  );\r\n\r\n  const submitPlasticity = value && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      Submit Plasticity\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 5}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{plasticityObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{plasticityObj.descrip}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        {currentDescrip}\r\n        {submitPlasticity}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Plasticity;\r\n","import React, { useState } from \"react\";\r\nimport { cohesivenessObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Slide,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Cohesiveness = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && cohesivenessObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {cohesivenessObj.options.map((e, index) => (\r\n        <Tab key={index} label={`${e.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\">\r\n      {cohesivenessObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitCohesion = tabs !== false && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      Submit Cohesiveness\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 6}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{cohesivenessObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{cohesivenessObj.descrip}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        {currentDescrip}\r\n        {submitCohesion}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Cohesiveness;\r\n","import React, { useState } from \"react\";\r\nimport { sedimentaryStructureObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Slide,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst SedimentaryStructure = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && sedimentaryStructureObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {sedimentaryStructureObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\">\r\n      {sedimentaryStructureObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitStructure = tabs !== false && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      Submit structure\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 7}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{sedimentaryStructureObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">\r\n          {sedimentaryStructureObj.descrip}\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        {currentDescrip}\r\n        {submitStructure}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default SedimentaryStructure;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { weatheringObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Slide,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n  RotateLeftRounded,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Weathering = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  //array of objects(an object for each question), with key(name) and value(arr[\"letter\", checked(bool)])\r\n  const [boxes, setBoxes] = useState();\r\n\r\n  function makeBoxes() {\r\n    //on page load make an object for each question/options\r\n    let start = 0;\r\n    let num = weatheringObj.questions.length;\r\n    let allQs = [];\r\n    //https://stackoverflow.com/questions/13104494/does-javascript-pass-by-reference\r\n    while (start < num) {\r\n      allQs[start] = {};\r\n      start++;\r\n    }\r\n    weatheringObj.questions.forEach((q, index) => {\r\n      let opts = q.options;\r\n      opts.forEach((o) => (allQs[index][o.name] = [o.answer, false]));\r\n    });\r\n    setBoxes(allQs);\r\n  }\r\n  //run once on load to make checkboxes values\r\n  useEffect(() => {\r\n    makeBoxes();\r\n  }, []);\r\n\r\n  const handleBoxes = (e) => {\r\n    //ie: target = \"C\"\r\n    let target = e.target.value;\r\n    let newBox = [...boxes];\r\n    let newArrVal = [];\r\n    newArrVal.push(newBox[activeTab][target][0], !newBox[activeTab][target][1]);\r\n    newBox[activeTab][target] = newArrVal;\r\n    setBoxes(newBox);\r\n  };\r\n\r\n  const [value, setValue] = useState();\r\n  useEffect(() => {\r\n    //join each true value in each obj in boxes, with space between\r\n    let pushString = \"\";\r\n    boxes &&\r\n      boxes.forEach((o) => {\r\n        let tempStr = [];\r\n        for (let key in o) {\r\n          o[key][1] === true && tempStr.push(key[0]);\r\n        }\r\n        pushString = pushString + \" \" + tempStr.join(\"\").toUpperCase();\r\n      });\r\n    setValue(pushString);\r\n  }, [boxes]);\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n\r\n  const handleActiveTab = (e, newtab) => {\r\n    setActiveTab(newtab);\r\n  };\r\n\r\n  const optionsTabs = (\r\n    <Tabs onChange={handleActiveTab} value={activeTab} variant=\"scrollable\">\r\n      {weatheringObj.questions.map((k, index) => (\r\n        <Tab key={index} value={index} label={k.question} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const checkBoxes = boxes && (\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup row style={{ justifyContent: \"center\" }}>\r\n        {weatheringObj.questions[activeTab].options.map((o) => (\r\n          <FormControlLabel\r\n            key={o.answer}\r\n            control={\r\n              <Checkbox\r\n                size=\"small\"\r\n                key={o.name}\r\n                value={o.name}\r\n                checked={boxes[activeTab][o.name][1]}\r\n                onChange={(e) => handleBoxes(e)}\r\n              />\r\n            }\r\n            label={`${o.name.toUpperCase()}: ${o.descrip}`}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n\r\n  const resetBoxes = (\r\n    <Button onClick={makeBoxes} variant=\"text\" style={{ marginBottom: \"16px\" }}>\r\n      <RotateLeftRounded />\r\n      <Typography variant=\"button\">Reset Checkboxes</Typography>\r\n    </Button>\r\n  );\r\n  const submitBoxes = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit features</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 8}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{weatheringObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{weatheringObj.descrip}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        {optionsTabs}\r\n        <Typography variant=\"h6\">\r\n          {weatheringObj.questions[activeTab].descrip}\r\n        </Typography>\r\n        {checkBoxes}\r\n        {resetBoxes}\r\n        {submitBoxes}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Weathering;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n  Button,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst DepositionalEnv = (props) => {\r\n  const { step, outputStep, handleChange } = props;\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const submitEnv = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Environment</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 9}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          If you have deduced the depositional environment, enter in below.\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">\r\n          *future version will add a dropdown component of various environments\r\n          to insert into textbox\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <TextField\r\n          variant=\"filled\"\r\n          multiline={true}\r\n          rows=\"6\"\r\n          placeholder=\"Change Depositional Environment\"\r\n          label={outputStep.output}\r\n          onChange={handleTextFieldChange}\r\n          defaultValue={outputStep.output}\r\n        />\r\n        {submitEnv}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default DepositionalEnv;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n  Button,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst StratName = (props) => {\r\n  const { step, outputStep, handleChange } = props;\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const submitName = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Strat Name</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 10}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          If you have deduced the depositional environment, enter in below.\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">\r\n          *future version will add a dropdown component of various environments\r\n          to insert into textbox\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <TextField\r\n          variant=\"filled\"\r\n          multiline={true}\r\n          rows=\"6\"\r\n          placeholder=\"Change Stratigraphic Name\"\r\n          label={outputStep.output}\r\n          onChange={handleTextFieldChange}\r\n          defaultValue={outputStep.output}\r\n        />\r\n        {submitName}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default StratName;\r\n","import React, { useState } from \"react\";\r\nimport { stratContactObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Slide,\r\n  Divider,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst StratContact = (props) => {\r\n  const { step, handleChange } = props;\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && stratContactObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {stratContactObj.options.map((k, index) => (\r\n        <Tab key={index} label={k.name} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\">\r\n      {stratContactObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitContact = tabs !== false && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      Submit Contact\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 11}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{stratContactObj.question}</Typography>\r\n        <Divider />\r\n        <Typography variant=\"subtitle1\">{stratContactObj.descrip}</Typography>\r\n        <Divider />\r\n        {optionsTabs}\r\n        {currentDescrip}\r\n        {submitContact}\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default StratContact;\r\n","import React from \"react\";\r\nimport { Paper, makeStyles, Slide, Typography } from \"../../utility/themeIndex\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  expand: {\r\n    flex: 1,\r\n    textAlign: \"center\"\r\n  },\r\n  contrast: {\r\n    color: theme.palette.secondary.contrastText\r\n  }\r\n}));\r\n\r\nconst End = props => {\r\n  const classes = useStyles();\r\n  const { step, generateAnswer, answer } = props;\r\n\r\n  generateAnswer();\r\n\r\n  //add dropdown to nevigate back to a step\r\n  //clicking on individual descriptor navs to that question\r\n\r\n  //add option to manually edit output answer\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 12}>\r\n      <Paper className={classes.expand}>\r\n        <Typography variant=\"h3\">Your sample description is:</Typography>\r\n        <Typography className={classes.contrast} variant=\"h3\">\r\n          {answer}\r\n        </Typography>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default End;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  AppBar,\r\n  IconButton,\r\n  MenuIcon,\r\n  Button,\r\n  RotateLeftRounded,\r\n  DoneRounded,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    color: theme.palette.secondary.contrastText,\r\n    marginRight: theme.spacing(2),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const { toggleDrawer, title, handleReset, disableButton, toFinish } = props;\r\n\r\n  const resetButton = (\r\n    <Button onClick={handleReset} variant=\"outlined\" size=\"medium\">\r\n      <RotateLeftRounded />\r\n      <Typography variant=\"button\">Restart</Typography>\r\n    </Button>\r\n  );\r\n  const finishButton = (\r\n    <Button\r\n      onClick={toFinish}\r\n      variant=\"outlined\"\r\n      size=\"medium\"\r\n      disabled={disableButton}\r\n    >\r\n      <DoneRounded />\r\n      <Typography variant=\"button\">Finish</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <AppBar position=\"static\" elevation={9}>\r\n      <Toolbar>\r\n        <IconButton\r\n          className={classes.menu}\r\n          onClick={toggleDrawer}\r\n          edge=\"start\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography style={{ flex: 1 }} variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        {resetButton}\r\n        {finishButton}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Toolbar,\r\n  MobileStepper,\r\n  Button,\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight,\r\n  Typography,\r\n} from \"../../utility/themeIndex\";\r\n\r\nexport default function Header(props) {\r\n  // const classes = useStyles();\r\n  const { steps, activeStep, moveForward, moveBackward } = props;\r\n\r\n  const backButton = (\r\n    <Button\r\n      onClick={moveBackward}\r\n      variant=\"contained\"\r\n      disabled={activeStep === 0}\r\n    >\r\n      <KeyboardArrowLeft />\r\n      <Typography variant=\"button\">backward</Typography>\r\n    </Button>\r\n  );\r\n\r\n  const nextButton = (\r\n    <Button\r\n      onClick={moveForward}\r\n      variant=\"contained\"\r\n      disabled={activeStep === steps - 1}\r\n    >\r\n      <Typography variant=\"button\">forward</Typography>\r\n      <KeyboardArrowRight />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Toolbar disableGutters={true}>\r\n      <MobileStepper\r\n        position=\"static\"\r\n        steps={steps}\r\n        activeStep={activeStep}\r\n        nextButton={nextButton}\r\n        backButton={backButton}\r\n      />\r\n    </Toolbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  MenuOpen,\r\n  Divider,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    color: theme.palette.secondary.contrastText,\r\n    alignSelf: \"flex-end\",\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavDrawer = (props) => {\r\n  const classes = useStyles();\r\n  const { drawer, drawerList, toggleDrawer, moveByIndex } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"persistent\" open={drawer} anchor=\"left\">\r\n      <IconButton className={classes.menu} onClick={toggleDrawer}>\r\n        <MenuOpen />\r\n      </IconButton>\r\n      <Divider style={{ backgroundColor: \"white\" }} />\r\n      <List>\r\n        {drawerList.map((text, index) => (\r\n          <ListItem button key={text} onClick={() => moveByIndex(index)}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NavDrawer;\r\n","import React, { useState } from \"react\";\r\nimport Begin from \"../pages/Begin\";\r\nimport GrainSize from \"../pages/GrainSize\";\r\nimport Color from \"../pages/Color\";\r\nimport Density from \"../pages/Density\";\r\nimport Moisture from \"../pages/Moisture\";\r\nimport Plasticity from \"../pages/Plasticity\";\r\nimport Cohesiveness from \"../pages/Cohesiveness\";\r\nimport SedimentaryStructure from \"../pages/SedimentaryStructure\";\r\nimport Weathering from \"../pages/Weathering\";\r\nimport DepositionalEnv from \"../pages/DepositionalEnv\";\r\nimport StratName from \"../pages/StratName\";\r\nimport StratContact from \"../pages/StratContact\";\r\nimport End from \"../pages/End\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport NavDrawer from \"./Drawer\";\r\n\r\nimport { Container } from \"../../utility/themeIndex\";\r\n\r\nconst FormCompiler = () => {\r\n  //get component to render\r\n  const questionList = [\r\n    {\r\n      component: Begin,\r\n      title: \"Start\",\r\n      output: \"\",\r\n    },\r\n    { component: GrainSize, title: \"Grain Size\", output: \"\" },\r\n    { component: Color, title: \"Color\", output: \"\" },\r\n    { component: Density, title: \"Density\", output: \"\" },\r\n    { component: Moisture, title: \"Moisture\", output: \"\" },\r\n    { component: Plasticity, title: \"Plasticity\", output: \"\" },\r\n    { component: Cohesiveness, title: \"Cohesiveness\", output: \"\" },\r\n    {\r\n      component: SedimentaryStructure,\r\n      title: \"Sedimentary Structure\",\r\n      output: \"\",\r\n    },\r\n    { component: Weathering, title: \"Weathering\", output: \"\" },\r\n    {\r\n      component: DepositionalEnv,\r\n      title: \"Depositional Environment\",\r\n      output: \"\",\r\n    },\r\n    { component: StratName, title: \"Stratigraphic Name\", output: \"\" },\r\n    { component: StratContact, title: \"Stratigraphic Contact\", output: \"\" },\r\n    { component: End, title: \"Finish\", output: \"\" },\r\n  ];\r\n\r\n  //step corresponds to questionComponentList index, and therefore output index to match\r\n  const [step, setStep] = useState(0);\r\n  //end output- complete sample description\r\n  const [output, setOutput] = useState(questionList);\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  //move forward/backward functions\r\n  function moveForward() {\r\n    setStep(step + 1);\r\n  }\r\n  function moveBackward() {\r\n    setStep(step - 1);\r\n  }\r\n\r\n  function moveByIndex(i) {\r\n    setStep(i);\r\n  }\r\n  //resart question line or make new sample\r\n  function handleReset() {\r\n    setStep(0);\r\n    setOutput(questionList);\r\n  }\r\n\r\n  function toFinish() {\r\n    setStep(output.length - 1);\r\n  }\r\n\r\n  function toggleDrawer() {\r\n    setDrawer((prev) => !prev);\r\n  }\r\n\r\n  const disableButton = step === output.length - 1;\r\n\r\n  const handleChange = (input) => (e) => {\r\n    //button vs text inputs\r\n    const val = e.currentTarget.value ? e.currentTarget.value : e.target.value;\r\n    val === undefined\r\n      ? setOutput(output, (output[step].output = \"\"))\r\n      : setOutput(output, (output[step].output = val));\r\n    moveForward();\r\n  };\r\n\r\n  const [answer, setAnswer] = useState();\r\n  function generateAnswer() {\r\n    let answer = [];\r\n    output.forEach((e) => e.output.length && answer.push(e.output));\r\n    setAnswer(answer.join(\", \").toUpperCase());\r\n  }\r\n\r\n  //dynamically renders the current question component\r\n  const currentQuestion = React.createElement(\r\n    questionList[step].component,\r\n    {\r\n      step: step,\r\n      outputStep: output[step],\r\n      handleChange: handleChange,\r\n      answer: answer,\r\n      generateAnswer: generateAnswer,\r\n      moveForward: moveForward,\r\n    },\r\n    null\r\n  );\r\n\r\n  const drawerList = [];\r\n  questionList.forEach((item) => drawerList.push(item.title));\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Header\r\n        toggleDrawer={toggleDrawer}\r\n        title={output[step].title}\r\n        handleReset={handleReset}\r\n        disableButton={disableButton}\r\n        toFinish={toFinish}\r\n      />\r\n\r\n      <NavDrawer\r\n        drawerList={drawerList}\r\n        drawer={drawer}\r\n        toggleDrawer={toggleDrawer}\r\n        moveByIndex={moveByIndex}\r\n      />\r\n      {currentQuestion}\r\n\r\n      <Footer\r\n        steps={output.length}\r\n        activeStep={step}\r\n        moveForward={moveForward}\r\n        moveBackward={moveBackward}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormCompiler;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { green, blueGrey } from \"@material-ui/core/colors\";\r\n\r\n//https://github.com/mui-org/material-ui/issues/6939\r\n\r\nconst defaultTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[\"A700\"],\r\n      contrastText: blueGrey[800],\r\n    },\r\n    secondary: {\r\n      main: blueGrey[800],\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: defaultTheme.palette.primary,\r\n    secondary: defaultTheme.palette.secondary,\r\n    background: {\r\n      paper: defaultTheme.palette.secondary.light,\r\n      default: defaultTheme.palette.secondary.main,\r\n    },\r\n  },\r\n  spacing: defaultTheme.spacing,\r\n  typography: {\r\n    //h3: card titles\r\n    h3: {\r\n      fontWeight: \"800\",\r\n      margin: defaultTheme.spacing(3),\r\n    },\r\n    //h5: header/card tabs\r\n    h5: {\r\n      color: defaultTheme.palette.secondary.contrastText,\r\n    },\r\n    //h6: currentTabDescrips\r\n    h6: {\r\n      marginTop: defaultTheme.spacing(3),\r\n      marginBottom: defaultTheme.spacing(3),\r\n    },\r\n    button: {\r\n      fontWeight: 550,\r\n      color: \"inherit\",\r\n      paddingLeft: defaultTheme.spacing(1),\r\n      paddingRight: defaultTheme.spacing(1),\r\n    },\r\n    //body1:\r\n    body1: {\r\n      marginTop: defaultTheme.spacing(3),\r\n      marginBottom: defaultTheme.spacing(3),\r\n    },\r\n    //subt1: question descrip\r\n    subtitle1: {\r\n      marginBottom: defaultTheme.spacing(0),\r\n      color: defaultTheme.palette.secondary.light,\r\n      fontStyle: \"italic\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiAppBar: {\r\n      root: {\r\n        paddingBottom: defaultTheme.spacing(1),\r\n      },\r\n    },\r\n    MuiButton: {\r\n      //header- oulined/medium\r\n      outlined: {\r\n        color: defaultTheme.palette.secondary.contrastText,\r\n        padding: defaultTheme.spacing(1),\r\n        margin: defaultTheme.spacing(1),\r\n        borderColor: defaultTheme.palette.secondary.contrastText,\r\n        \"&:hover\": {\r\n          borderWidth: \"3px\",\r\n          borderColor: defaultTheme.palette.primary.dark,\r\n          backgroundColor: defaultTheme.palette.primary.light,\r\n        },\r\n      },\r\n      //contained: footer nav buttons\r\n      contained: {\r\n        color: defaultTheme.palette.primary.main,\r\n        backgroundColor: defaultTheme.palette.secondary.dark,\r\n        \"&:hover\": {\r\n          backgroundColor: defaultTheme.palette.secondary.light,\r\n        },\r\n        \"&$disabled\": {\r\n          color: defaultTheme.palette.secondary.light,\r\n        },\r\n      },\r\n      //submit answer button\r\n      containedSizeSmall: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        width: \"30%\",\r\n        alignSelf: \"center\",\r\n      },\r\n      //text: subquestions in paper\r\n      text: {\r\n        width: \"30%\",\r\n        alignSelf: \"center\",\r\n        marginTop: defaultTheme.spacing(3),\r\n        border: `solid 1px ${defaultTheme.palette.primary.contrastText}`,\r\n      },\r\n    },\r\n    MuiContainer: {\r\n      root: {\r\n        padding: \"0px !important\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      },\r\n    },\r\n    MuiDrawer: {\r\n      paperAnchorDockedLeft: {\r\n        width: \"25vw\",\r\n        background: defaultTheme.palette.secondary.dark,\r\n        color: defaultTheme.palette.secondary.contrastText,\r\n        borderRight: `2px solid ${defaultTheme.palette.secondary.contrastText}`,\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        padding: defaultTheme.spacing(0),\r\n        width: \"auto\",\r\n      },\r\n      button: {\r\n        borderBottom: `1px solid ${defaultTheme.palette.secondary.light}`,\r\n        \"&:hover\": {\r\n          backgroundColor: defaultTheme.palette.secondary.light,\r\n        },\r\n      },\r\n    },\r\n    MuiToolbar: {\r\n      root: {\r\n        background: defaultTheme.palette.secondary.dark,\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      //top appbar paper at elevation 9\r\n      //target questions at 7\r\n      elevation7: {\r\n        color: defaultTheme.palette.secondary.dark,\r\n        background: defaultTheme.palette.primary.main,\r\n        width: \"70%\",\r\n        alignSelf: \"center\",\r\n        textAlign: \"center\",\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: defaultTheme.spacing(3),\r\n        marginBottom: defaultTheme.spacing(3),\r\n        padding: `${defaultTheme.spacing(3)}px ${defaultTheme.spacing(6)}px`,\r\n        boxShadow: `10px 10px 10px ${defaultTheme.palette.secondary.dark}, -10px -10px 10px ${defaultTheme.palette.secondary.dark}`,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        marginTop: defaultTheme.spacing(1),\r\n        marginBottom: defaultTheme.spacing(1),\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        color: defaultTheme.palette.secondary.light,\r\n        marginBottom: defaultTheme.spacing(3),\r\n        \"& .MuiTab-textColorInherit.Mui-selected\": {\r\n          color: defaultTheme.palette.secondary.dark,\r\n        },\r\n      },\r\n      indicator: {\r\n        color: defaultTheme.palette.primary.dark,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      wrapper: {\r\n        fontSize: defaultTheme.typography.h5.fontSize,\r\n        fontWeight: \"600\",\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      root: {\r\n        marginTop: defaultTheme.spacing(3),\r\n        width: \"70%\",\r\n        alignSelf: \"center\",\r\n        margin: defaultTheme.spacing(3),\r\n      },\r\n    },\r\n    MuiButtonGroup: {\r\n      root: {\r\n        marginTop: defaultTheme.spacing(3),\r\n        marginBottom: defaultTheme.spacing(3),\r\n        justifyContent: \"center\",\r\n      },\r\n    },\r\n    MuiButtonBase: {\r\n      root: {\r\n        //change to 1 fixes mobilestepper\r\n        margin: defaultTheme.spacing(0),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: defaultTheme.typography.subtitle1.fontSize,\r\n      },\r\n    },\r\n    MuiMobileStepper: {\r\n      root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingLeft: defaultTheme.spacing(3),\r\n        paddingRight: defaultTheme.spacing(3),\r\n      },\r\n      dot: {\r\n        transform: \"scale(1.5)\",\r\n        margin: \"0px 8px\",\r\n      },\r\n    },\r\n    MuiSvgIcon: {\r\n      root: {\r\n        color: \"inherit\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FormCompiler from \"./components/parts/FormCompiler\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./utility/muiTheme\";\n\n//https://www.dot.ny.gov/divisions/engineering/technical-services/geotechnical-engineering-bureau/geotech-eng-repository/GDM_Ch-5_Soil_Rock_Classification.pdf\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <FormCompiler />\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}