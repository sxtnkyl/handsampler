{"version":3,"sources":["components/pages/Begin.js","utility/grainSizeObj.js","components/pages/GrainSize.js","components/pages/Color.js","utility/smallerObjs.js","components/pages/Density.js","components/pages/Moisture.js","components/pages/Plasticity.js","components/pages/Cohesiveness.js","components/pages/SedimentaryStructure.js","components/pages/Weathering.js","components/pages/DepositionalEnv.js","components/pages/StratName.js","components/pages/StratContact.js","components/pages/End.js","components/parts/Header.js","components/parts/Footer.js","components/parts/Drawer.js","components/parts/FormCompiler.js","utility/muiTheme.js","App.js","serviceWorker.js","index.js"],"names":["Begin","props","step","Slide","direction","in","Paper","variant","elevation","Typography","style","flex","grainSizeObj","question","options","id","descrip","symbol","name","GrainSize","handleChange","useState","tabs","setTabs","path","setPath","currentTab","hasOptions","hasOwnProperty","hasQuestion","tabHasSymbol","answer","concat","toUpperCase","currentQuestion","currentDescription","optionsTabs","Tabs","value","onChange","e","newtab","centered","map","index","Tab","key","label","selectButton","Button","onClick","newPath","updatePath","endOfLine","Container","size","Divider","Color","outputStep","setValue","pickColors","TextField","multiline","rows","placeholder","output","event","target","defaultValue","submitColors","moistureObj","plasticityObj","cohesivenessObj","sedimentaryStructureObj","weatheringObj","questions","densityObj","nValue","max","values","descriptor","stratContactObj","DensitySlider","withStyles","theme","root","marginTop","spacing","marginBottom","color","palette","secondary","main","breakpoints","down","width","thumb","border","backgroundColor","primary","track","height","borderRadius","valueLabel","left","contrastText","Slider","LightTooltip","tooltip","arrow","Tooltip","Density","setLabel","k","sliderVal","makeLabel","val","vals","findIndex","v","inputSlider","alignItems","newValue","min","valueLabelDisplay","valueLabelFormat","marks","getAriaValueText","submitDensity","title","placement","Moisture","currentDescrip","submitMoisture","Plasticity","matches","useMediaQuery","scrollButtons","submitPlasticity","Cohesiveness","submitCohesion","SedimentaryStructure","submitStructure","Weathering","boxes","setBoxes","makeBoxes","start","num","length","allQs","forEach","q","o","useEffect","pushString","tempStr","push","join","checkBoxes","FormControl","component","FormGroup","display","flexDirection","justifyContent","FormControlLabel","control","Checkbox","checked","newBox","newArrVal","handleBoxes","submitBoxes","RotateLeftRounded","DepositionalEnv","pickEnv","submitEnv","StratName","pickStrat","submitName","StratContact","submitContact","useStyles","makeStyles","expand","textAlign","background","paddingLeft","paddingRight","paddingTop","header","End","classes","generateAnswer","className","menu","marginRight","light","Header","toggleDrawer","handleReset","disableButton","toFinish","resetButton","query","finishButton","disabled","DoneRounded","AppBar","position","Toolbar","IconButton","edge","aria-label","steps","activeStep","moveForward","moveBackward","backButton","KeyboardArrowLeft","nextButton","KeyboardArrowRight","disableGutters","MobileStepper","alignSelf","NavDrawer","drawer","drawerList","moveByIndex","Drawer","open","anchor","MenuOpen","List","text","ListItem","button","ListItemText","FormCompiler","questionList","setStep","setOutput","setDrawer","prev","setAnswer","React","createElement","input","console","log","currentTarget","undefined","item","padding","i","defaultTheme","createMuiTheme","green","blueGrey","paper","default","typography","h3","fontSize","dark","h4","fontWeight","h5","h6","body1","subtitle1","overrides","MuiAppBar","paddingBottom","MuiButton","minWidth","outlined","borderWidth","borderColor","contained","containedSizeSmall","MuiContainer","MuiDrawer","paperAnchorDockedLeft","MuiListItem","borderBottom","MuiToolbar","MuiPaper","elevation7","up","MuiDivider","MuiTabs","indicator","MuiTab","marginLeft","wrapper","MuiTextField","MuiButtonGroup","MuiButtonBase","margin","MuiTooltip","MuiMobileStepper","dot","transform","MuiSvgIcon","responsiveFontSizes","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bad4983e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography, Paper, Slide } from \"../../utility/themeIndex\";\r\n\r\nconst Begin = (props) => {\r\n  const { step } = props;\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 0}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          Welcome to the Hand Sample Generator!\r\n        </Typography>\r\n        <Typography variant=\"h6\" style={{ flex: \"0\" }}>\r\n          Answer each question to produce a sample description at the end of the\r\n          survey.\r\n        </Typography>\r\n        <Typography variant=\"h6\">\r\n          You can produce the output early by clicking the Finish button.\r\n        </Typography>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Begin;\r\n","const grainSizeObj = {\r\n  question: \"Is the majority of the sample coarse or fine grained?\",\r\n  options: [\r\n    {\r\n      id: \"coarse\",\r\n      descrip: \"The sample is >50% coarse grains, <50% fines\",\r\n      question: \"What is the sand to gravel ratio?\",\r\n      options: [\r\n        {\r\n          id: \"gravel\",\r\n          descrip: \"The amount of gravel > sand\",\r\n          question: \"The sample is made of what % of fine grain sediments?\",\r\n          options: [\r\n            {\r\n              id: 5,\r\n              descrip: \"sample contains < 5% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GW\",\r\n                      name: \"well graded gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GW\",\r\n                      name: \"well graded gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GP\",\r\n                      name: \"poorly graded gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GP\",\r\n                      name: \"poorly graded gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 10,\r\n              descrip: \"sample contains 6-14% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Are the fines non-plastic or plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GW-GM\",\r\n                          name: \"well graded gravel with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GW-GM\",\r\n                          name: \"well graded gravel with silt and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GW-GC\",\r\n                          name: \"well graded gravel with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GW-GC\",\r\n                          name: \"well graded gravel with clay and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Are fines plastic or non-plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GP-GM\",\r\n                          name: \"poorly graded gravel with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GP-GM\",\r\n                          name: \"poorly graded gravel with silt and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% sand?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"GP-GC\",\r\n                          name: \"poorly graded gravel with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"GP-GC\",\r\n                          name: \"poorly graded gravel with clay and sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 15,\r\n              descrip: \"sample contains > 15% fines\",\r\n              question: \"Are the fines non-plastic or plastic?\",\r\n              options: [\r\n                {\r\n                  id: \"nonplastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GM\",\r\n                      name: \"silty gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GM\",\r\n                      name: \"silty gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"plastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                  question: \"Is the sample > or < 15% sand?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"GC\",\r\n                      name: \"clayey gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"GC\",\r\n                      name: \"clayey gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"sand\",\r\n          descrip: \"The amount of gravel < sand\",\r\n          question: \"The sample is made of what % of fine grain sediments?\",\r\n          options: [\r\n            {\r\n              id: 5,\r\n              descrip: \"sample contains < 5% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"SW\",\r\n                      name: \"well graded sand\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"SW\",\r\n                      name: \"well graded sand with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"SP\",\r\n                      name: \"poorly graded sand\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"SP\",\r\n                      name: \"poorly graded sand with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 10,\r\n              descrip: \"sample contains 6-14% fines\",\r\n              question: \"Is the sample well graded or poorly graded?\",\r\n              options: [\r\n                {\r\n                  id: \"wellgraded\",\r\n                  descrip:\r\n                    \"A well graded soil is a soil that contains particles of a wide range of sizes and has a good representation of all sizes from the No. 4 to No. 200 sieves.\",\r\n                  question: \"Are the fines non-plastic or plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SW-SM\",\r\n                          name: \"well graded sand with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SW-SM\",\r\n                          name: \"well graded sand with silt and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SW-SC\",\r\n                          name: \"well graded sand with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SW-SC\",\r\n                          name: \"well graded sand with clay and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"poorlygraded\",\r\n                  descrip:\r\n                    \"A poorly graded soil is a soil that does not have a good representation of all sizes of particles from the No. 4 to No. 200 sieve.\",\r\n                  question: \"Are fines plastic or non-plastic?\",\r\n                  options: [\r\n                    {\r\n                      id: \"nonplastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SP-SM\",\r\n                          name: \"poorly graded sand with silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SP-SM\",\r\n                          name: \"poorly graded sand with silt and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"plastic\",\r\n                      descrip:\r\n                        \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                      question: \"Is the sample > or < 15% gravel?\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"SP-SC\",\r\n                          name: \"poorly graded sand with clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"SP-SC\",\r\n                          name: \"poorly graded sand with clay and gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 15,\r\n              descrip: \"sample contains > 15% fines\",\r\n              question: \"Are the fines non-plastic or plastic?\",\r\n              options: [\r\n                {\r\n                  id: \"nonplastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread cracks or breaks while narrowing down to a smaller diameter, the soil is termed to have a non-plastic nature.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"SM\",\r\n                      name: \"silty gravel\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"SM\",\r\n                      name: \"silty gravel with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"plastic\",\r\n                  descrip:\r\n                    \"A thread of fine soil is rolled over a flat, smooth surface. If the thread keeps narrowing down to a much smaller diameter without cracking, the soil is termed to have a plastic nature.\",\r\n                  question: \"Is the sample > or < 15% gravel?\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"SC\",\r\n                      name: \"clayey sand\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"SC\",\r\n                      name: \"clayey sand with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"fine\",\r\n      descrip: \"The sample is <50% coarse graines, >50% fines\",\r\n      question: \"Does organic content influence soil properties?\",\r\n      options: [\r\n        {\r\n          id: \"yes\",\r\n          descrip:\r\n            \"The soil exhibits properties indicative of biochemical reactions such as oxidation patterns, organic odors, and physical matter such as roots, compost, and microbes.\",\r\n          question: \"Is the sample > or < 30% coarse grained sediments?\",\r\n          options: [\r\n            {\r\n              id: \"<30\",\r\n              question:\r\n                \"Is the sample <15% or 15-25% coarse grained sediments?\",\r\n              descrip: \"The sample is <30% coarse sediemnt\",\r\n              options: [\r\n                {\r\n                  id: \"<15%\",\r\n                  symbol: \"OL/OH\",\r\n                  name: \"organic soil\",\r\n                },\r\n                {\r\n                  id: \"15-25%\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is 15-25% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"organic soil with sand\",\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"organic soil with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: \">30\",\r\n              question: \"Is the sample more sand or gravel?\",\r\n              descrip: \"The sample is >30% coarse sediemnt\",\r\n              options: [\r\n                {\r\n                  id: \"% sand > % gravel\",\r\n                  question: \"Is the sample more or less than 15% gravel?\",\r\n                  descrip: \"The sample is more sand than gravel\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"sandy organic soil\",\r\n                    },\r\n                    {\r\n                      id: \">15% gravel\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"sandy organic soil with gravel\",\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \"% sand < % gravel\",\r\n                  question: \"Is the sample more or less than 15% gravel?\",\r\n                  descrip: \"The sample is more gravel than sand\",\r\n                  options: [\r\n                    {\r\n                      id: \"<15% sand\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"gravelly organic soil\",\r\n                    },\r\n                    {\r\n                      id: \">15% sand\",\r\n                      symbol: \"OL/OH\",\r\n                      name: \"gravelly organic soil with sand\",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"no\",\r\n          descrip: \"The soil contains no organic matter.\",\r\n          question: \"What is the plasticity of the sample?\",\r\n          options: [\r\n            {\r\n              id: \"ML\",\r\n              descrip: \"Nonplastic to Low\",\r\n              question: \"Is the sample > or < 30% coarse sediment?\",\r\n              options: [\r\n                {\r\n                  id: \"<30\",\r\n                  question: \"What is the % coarse grain sediment?\",\r\n                  descrip: \"The sample is <30% coarse sediment\",\r\n                  options: [\r\n                    { id: \"<15%\", symbol: \"ML\", name: \"silt\" },\r\n                    {\r\n                      id: \"15-25%\",\r\n                      question: \"Is the sample more sand or gravel?\",\r\n                      descrip: \"The sample is 15-25% sand and gravel\",\r\n                      options: [\r\n                        {\r\n                          id: \"% sand > % gravel\",\r\n                          symbol: \"ML\",\r\n                          name: \"silt with sand\",\r\n                        },\r\n                        {\r\n                          id: \"% sand < % gravel\",\r\n                          symbol: \"ML\",\r\n                          name: \"silt with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \">30\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is >30% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      question: \"What percent of the sample is gravel?\",\r\n                      descrip: \"The sample is more sand than gravel\",\r\n                      options: [\r\n                        { id: \"<15% gravel\", symbol: \"ML\", name: \"sandy silt\" },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"ML\",\r\n                          name: \"sandy silt with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      question: \"What percent of the sample is sand?\",\r\n                      descrip: \"The sample is more gravel than sand\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"ML\",\r\n                          name: \"gravelly silt\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"ML\",\r\n                          name: \"gravelly silt with sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: \"CL\",\r\n              descrip: \"Medium Plasticity\",\r\n              question: \"Is the sample > or < 30% coarse sediment?\",\r\n              options: [\r\n                {\r\n                  id: \"<30\",\r\n                  question: \"What % of the sample is coarse grained sediment?\",\r\n                  descrip: \"The sample is <30% coarse sediment\",\r\n                  options: [\r\n                    { id: \"<15%\", symbol: \"CL\", name: \"lean clay\" },\r\n                    {\r\n                      id: \"15-25%\",\r\n                      question: \"Is the sample more sand or gravel?\",\r\n                      descrip: \"The sample is 15-25% coarse sediment\",\r\n                      options: [\r\n                        {\r\n                          id: \"% sand > % gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"lean clay with sand\",\r\n                        },\r\n                        {\r\n                          id: \"% sand < % gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"lean clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \">30\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is >30% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      question: \"Does the sample have > or < 15% gravel?\",\r\n                      descrip: \"The sample is more sand than gravel\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"sandy lean clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"CL\",\r\n                          name: \"sandy lean clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      question: \"Does the sample have > or < 15% sand?\",\r\n                      descrip: \"The sample is more gravel than sand\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"CL\",\r\n                          name: \"gravelly lean clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"CL\",\r\n                          name: \"gravelly lean clay with sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: \"CH\",\r\n              question: \"Is the sample > or < 30% coarse sediment?\",\r\n              descrip: \"High Plastcity\",\r\n              options: [\r\n                {\r\n                  id: \"<30\",\r\n                  question: \"What % of the sample is coarse grained sediment?\",\r\n                  descrip: \"The sample is <30% coarse sediment\",\r\n                  options: [\r\n                    { id: \"<15%\", symbol: \"CH\", name: \"fat clay\" },\r\n                    {\r\n                      id: \"15-25%\",\r\n                      question: \"Is the sample more sand or gravel?\",\r\n                      descrip: \"The sample is 15-25% coarse sediment\",\r\n                      options: [\r\n                        {\r\n                          id: \"% sand > % gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"fat clay with sand\",\r\n                        },\r\n                        {\r\n                          id: \"% sand < % gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"fat clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  id: \">30\",\r\n                  question: \"Is the sample more sand or gravel?\",\r\n                  descrip: \"The sample is >30% coarse sediment\",\r\n                  options: [\r\n                    {\r\n                      id: \"% sand > % gravel\",\r\n                      question: \"Does the sample have > or < 15% gravel?\",\r\n                      descrip: \"The sample is more sand than gravel\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"sandy fat clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% gravel\",\r\n                          symbol: \"CH\",\r\n                          name: \"sandy fat clay with gravel\",\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      id: \"% sand < % gravel\",\r\n                      question: \"Does the sample have > or < 15% sand?\",\r\n                      descrip: \"The sample is more gravel than sand\",\r\n                      options: [\r\n                        {\r\n                          id: \"<15% sand\",\r\n                          symbol: \"CH\",\r\n                          name: \"gravelly fat clay\",\r\n                        },\r\n                        {\r\n                          id: \">15% sand\",\r\n                          symbol: \"CH\",\r\n                          name: \"gravelly fat clay with sand\",\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default grainSizeObj;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Slide,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\nimport grainSizeObj from \"../../utility/grainSizeObj\";\r\n//import as JSON and parse for increase performance\r\n//previous solution to work down question line: hold string values in array\r\n//https://stackoverflow.com/questions/6393943/convert-javascript-string-in-dot-notation-into-an-object-reference\r\n\r\nconst GrainSize = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  //used for index matching\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  const [path, setPath] = useState(grainSizeObj);\r\n  function updatePath() {\r\n    let newPath = path.options[tabs];\r\n    setPath(newPath);\r\n    setTabs(false);\r\n  }\r\n\r\n  let currentTab = tabs !== false && path.options[tabs];\r\n  let hasOptions = path.hasOwnProperty(\"options\");\r\n  let hasQuestion = path.hasOwnProperty(\"question\");\r\n  let tabHasSymbol = currentTab.hasOwnProperty(\"symbol\");\r\n  // let value = tabHasSymbol && currentTab.id;\r\n  let answer =\r\n    tabHasSymbol &&\r\n    currentTab.name.concat(\" (\", currentTab.symbol, \")\").toUpperCase();\r\n\r\n  const currentQuestion = hasQuestion && (\r\n    <Typography variant=\"h3\">{path.question}</Typography>\r\n  );\r\n\r\n  const currentDescription = currentTab.hasOwnProperty(\"descrip\") && (\r\n    <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n      {currentTab.descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const optionsTabs = hasOptions && (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {path.options.map((e, index) => (\r\n        <Tab key={index} label={`${e.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const selectButton = (\r\n    <Button variant=\"text\" onClick={() => updatePath()}>\r\n      select\r\n    </Button>\r\n  );\r\n\r\n  const endOfLine = (\r\n    <>\r\n      <Container>\r\n        <Typography variant=\"subtitle1\">\r\n          The sample group name and symbol is:\r\n        </Typography>\r\n        <Typography variant=\"h4\">{answer}</Typography>\r\n      </Container>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        value={answer}\r\n        onClick={handleChange(answer)}\r\n      >\r\n        <Typography variant=\"button\">Submit Grain Size</Typography>\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 1}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        {currentQuestion}\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          {optionsTabs}\r\n          {currentDescription}\r\n          {tabs === false ? null : tabHasSymbol ? endOfLine : selectButton}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default GrainSize;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Slide,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Color = (props) => {\r\n  const { step, outputStep, handleChange } = props;\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const pickColors = (\r\n    <Container>\r\n      <Typography variant=\"subtitle1\">\r\n        *future version will have color selector\r\n      </Typography>\r\n      <TextField\r\n        variant=\"filled\"\r\n        multiline={true}\r\n        rows=\"6\"\r\n        placeholder=\"Type all present Munsell scale colors from most to least prevalent\"\r\n        label={outputStep.output}\r\n        onChange={handleTextFieldChange}\r\n        defaultValue={outputStep.output}\r\n      />\r\n    </Container>\r\n  );\r\n\r\n  const submitColors = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Colors</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 2}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          Enter the colors that best represents the sample.\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          {pickColors}\r\n          {submitColors}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","const moistureObj = {\r\n  descrip: \"Moisture is a measure of liquid in a sample.\",\r\n  question: \"How much moisture is in the sample?\",\r\n  options: [\r\n    {\r\n      descrip: \"There is no water. Sample is dry.\",\r\n      id: \"Dry\",\r\n      answer: \"Dry\",\r\n    },\r\n    {\r\n      descrip: \"The sample is slightly wet.\",\r\n      id: \"Moist\",\r\n      answer: \"Moist\",\r\n    },\r\n    {\r\n      descrip: \"Water is visible and saturates the sample.\",\r\n      id: \"Wet\",\r\n      answer: \"Wet\",\r\n    },\r\n  ],\r\n};\r\n\r\n//https://stackoverflow.com/questions/2242086/how-to-detect-the-screen-resolution-with-javascript\r\n//create a popover with circle of correct mm using method above\r\nconst plasticityObj = {\r\n  descrip:\r\n    \"The plasticity can be attributed to the rolling technique. This is the ability of a cylindrical roll of soil rolled between the fingers to hold a 6, 4, or 2mm diameter.\",\r\n  question: \"What is the plasticity of the sample?\",\r\n  options: [\r\n    {\r\n      id: \"non\",\r\n      descrip: \"Will NOT support a 6mm roll\",\r\n      answer: \"Non-plastic\",\r\n    },\r\n    {\r\n      id: \"low\",\r\n      descrip: \"Can support a 6mm roll, but not 4mm\",\r\n      answer: \"Low Plasticity\",\r\n    },\r\n    {\r\n      id: \"medium\",\r\n      descrip: \"Can support a 4mm roll, but not 2mm\",\r\n      answer: \"Medium Plasticity\",\r\n    },\r\n    {\r\n      id: \"high\",\r\n      descrip: \"Can support a 2mm roll\",\r\n      answer: \"High Plasticity\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst cohesivenessObj = {\r\n  descrip:\r\n    \"Cohesion is the component of shear strength and property applied to clay containing soils.\",\r\n  question: \"Does the sample exhibit cohesion?\",\r\n  options: [\r\n    {\r\n      id: \"yes\",\r\n      descrip: \"The sample can form a 6mm diamter with the roll test\",\r\n      answer: \"Cohesive\",\r\n    },\r\n    {\r\n      id: \"no\",\r\n      descrip: \"The sample can NOT form a 6mm diamter with the roll test\",\r\n      answer: \"Noncohesive\",\r\n    },\r\n  ],\r\n};\r\n\r\n//https://en.wikipedia.org/wiki/Sedimentary_structures\r\nconst sedimentaryStructureObj = {\r\n  descrip:\r\n    \"Having a sedimentary structure suggests the sample contains bedding from deposition.\",\r\n  question: \"Which sedimentary structure, if any, apply to the sample?\",\r\n  options: [\r\n    {\r\n      id: \"massive\",\r\n      descrip: \"The stratification is thick and homogeneous.\",\r\n      answer: \"Massive\",\r\n    },\r\n    {\r\n      id: \"thick\",\r\n      descrip: \"Beds are >30cm\",\r\n      answer: \"Thickly Bedded\",\r\n    },\r\n    {\r\n      id: \"bedded\",\r\n      descrip: \"Beds are 3-30cm\",\r\n      answer: \"Bedded\",\r\n    },\r\n    {\r\n      id: \"thin\",\r\n      descrip: \"Beds are 0.5-30cm\",\r\n      answer: \"Thinly Bedded\",\r\n    },\r\n    {\r\n      id: \"laminated\",\r\n      descrip: \"Beds are <0.5cm\",\r\n      answer: \"Laminated\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst weatheringObj = {\r\n  descrip:\r\n    \"Exposure to the water table or elements in the atmosphere can cause various kinds of chemical alterations in a sample. Check all that apply for each type of weathering.\",\r\n  question: \"Is there any evidence of chemical weathering?\",\r\n  questions: [\r\n    {\r\n      descrip: \"These are extra properties that may or may not be present\",\r\n      question: \"modifier symbol\",\r\n      options: [\r\n        {\r\n          name: \"mottled\",\r\n          descrip:\r\n            \"The soil contains colors not associated with the compositional properties\",\r\n          answer: \"M\",\r\n        },\r\n        {\r\n          name: \"jointed\",\r\n          descrip:\r\n            \"Has fractures, spaces, or cracks that show no offset across the fracture\",\r\n          answer: \"J\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      descrip: \"Is there any signs of oxidation present?\",\r\n      question: \"oxidation\",\r\n      options: [\r\n        {\r\n          name: \"oxidized\",\r\n          descrip: \"Signs of oxidation are present in the sample.\",\r\n          answer: \"O\",\r\n        },\r\n        {\r\n          name: \"reduced\",\r\n          descrip: \"Signs of Redux reactions are persent.\",\r\n          answer: \"R\",\r\n        },\r\n        {\r\n          name: \"unoxidized\",\r\n          descrip: \"No sign of oxidation or reduction.\",\r\n          answer: \"U\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      descrip:\r\n        \"An example could be discoloration from chemical reactions due to fluid movement within the sample.\",\r\n      question: \"leaching\",\r\n      options: [\r\n        {\r\n          name: \"leached\",\r\n          descrip: \"Has evidence of leaching\",\r\n          answer: \"L\",\r\n        },\r\n        {\r\n          name: \"unleached\",\r\n          descrip: \"No evidence of leaching\",\r\n          answer: \"U\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      descrip:\r\n        \"Fluid movement in cracks and faults can lead to secondary mineral precipitation\",\r\n      question: \"carbonates\",\r\n      options: [\r\n        {\r\n          name: \"carbonates\",\r\n          descrip:\r\n            \"The sample contains trace carbonate from secondary precipitation.\",\r\n          answer: \"2\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\n//https://munsell.com/color-products/color-communications-products/environmental-color-communication/munsell-soil-color-charts/\r\n//FUTURE FEATURE: add dropdown for different color pages\r\nconst colorObj = {\r\n  descrip: \"Using the Munsell Color Chart, determine the color of the sample.\",\r\n  question: \"What is the primary color?\",\r\n  options: {\r\n    \"5Y\": {\r\n      descrip: \"some yellow color\",\r\n      answer: \"5/2 5Y\",\r\n    },\r\n  },\r\n};\r\n\r\nconst densityObj = {\r\n  question: \"Is the sample coarse or fine grained?\",\r\n  descrip:\r\n    \"Correct terminology for a sample's density can be described based on the deposited grain sizes and corresponding N-value.\",\r\n  nValue:\r\n    \"The N value represents a standard value of energy required to penetrate 30 cm into soil by percussion drilling. It is standardized as the energy of a falling hammer from a height of 0,76 m or about 472,95 J. In North America it is considered that the percussion has a 60% energy efficiency, or 283.8J.  As SPT is the most most popular field test, the N value is widely used. Engineers correlate it to granular soils density and clays consistency. The N value is implemented on design using empirical correlations, specially in foundations design. Friction angle, cohesion, stiffness and even the risk of liquefaction can be estimated by the N value correlations.\",\r\n  options: [\r\n    {\r\n      id: \"coarse\",\r\n      max: 50,\r\n      values: [\r\n        { value: 0, label: \"0N\", descriptor: \"very loose\" },\r\n        { value: 5, label: \"5N\", descriptor: \"loose\" },\r\n        { value: 11, label: \"11N\", descriptor: \"medium dense\" },\r\n        { value: 30, label: \"30N\", descriptor: \"dense\" },\r\n        { value: 50, label: \"50N\", descriptor: \"very dense\" },\r\n      ],\r\n    },\r\n    {\r\n      id: \"fine\",\r\n      max: 30,\r\n      values: [\r\n        { value: 0, label: \"0N\", descriptor: \"very soft\" },\r\n        { value: 3, label: \"3N\", descriptor: \"soft\" },\r\n        { value: 5, label: \"5N\", descriptor: \"medium\" },\r\n        { value: 9, label: \"9N\", descriptor: \"stiff\" },\r\n        { value: 16, label: \"16N\", descriptor: \"very stiff\" },\r\n        { value: 30, label: \"30N\", descriptor: \"hard\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst stratContactObj = {\r\n  descrip:\r\n    \"Evidence of a contact can be viewed in grainsize variation or mineral composition. Note that some gradational contats may be reflected over multiple bedding variations or a gradational change in sedimentary structures.\",\r\n  question: \"Are there are any notable stratigraphic contacts?\",\r\n  options: [\r\n    {\r\n      name: \"Sharp\",\r\n      descrip: \"The contact is over a distance of < 10cm\",\r\n      answer: \"Sharp Contact\",\r\n    },\r\n    {\r\n      name: \"Gradational\",\r\n      descrip: \"The contact is over a distance of > 10cm\",\r\n      answer: \"Gradational Contact\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport {\r\n  moistureObj,\r\n  plasticityObj,\r\n  cohesivenessObj,\r\n  sedimentaryStructureObj,\r\n  weatheringObj,\r\n  colorObj,\r\n  densityObj,\r\n  stratContactObj,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { densityObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n  Slider,\r\n  Tabs,\r\n  Tab,\r\n  Tooltip,\r\n  Button,\r\n  Container,\r\n  withStyles,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst DensitySlider = withStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(6),\r\n    marginBottom: theme.spacing(6),\r\n    color: theme.palette.secondary.main,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"80%\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  thumb: {\r\n    border: `2px solid ${theme.palette.secondary.main}`,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  track: {\r\n    height: \"4px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  valueLabel: {\r\n    left: \"auto\",\r\n    //ATTRIBUTE SELECTOR\r\n    //https://stackoverflow.com/questions/5110249/wildcard-in-css-for-classes\r\n    // \"& span[class*='PrivateValueLabel-circle-']\": {\r\n    //   backgroundColor: theme.palette.secondary.main,\r\n    // },\r\n    // \"& span[class*='PrivateValueLabel-label-']\": {\r\n    //   color: theme.palette.secondary.contrastText,\r\n    // },\r\n    \"& $span\": {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      \"& $span\": {\r\n        color: theme.palette.secondary.contrastText,\r\n      },\r\n    },\r\n  },\r\n}))(Slider);\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n  },\r\n  arrow: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst Density = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n    setValue(0);\r\n    setLabel(\"\");\r\n  };\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {densityObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} onClick={() => setTabs(index)} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const [sliderVal, setValue] = useState(0);\r\n  const [label, setLabel] = useState(\"\");\r\n  const handleSliderChange = (event, newValue) => {\r\n    if (sliderVal !== newValue) {\r\n      setValue(newValue);\r\n      setLabel(makeLabel(newValue));\r\n    }\r\n  };\r\n\r\n  const valueFormat = (value) => {\r\n    return `${value} N`;\r\n  };\r\n  //slider label text\r\n  const valueLabelFormat = (sliderVal) => {\r\n    if (sliderVal === densityObj.options[tabs].max)\r\n      return \">\" + densityObj.options[tabs].max;\r\n    else return sliderVal;\r\n  };\r\n\r\n  //return string label of number value\r\n  const makeLabel = (val) => {\r\n    let vals = densityObj.options[tabs].values;\r\n    let index = vals.findIndex((v) => v.value >= val);\r\n    if (vals[index].value === val) return vals[index].descriptor;\r\n    if (vals[index].value > val) return vals[index - 1].descriptor;\r\n  };\r\n\r\n  const inputSlider = tabs !== false && (\r\n    <Container\r\n      style={{\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <DensitySlider\r\n        value={sliderVal}\r\n        onChange={handleSliderChange}\r\n        min={0}\r\n        max={densityObj.options[tabs].max}\r\n        valueLabelDisplay=\"on\"\r\n        valueLabelFormat={valueLabelFormat}\r\n        marks={densityObj.options[tabs].values}\r\n        getAriaValueText={valueFormat}\r\n      />\r\n      <Typography variant=\"h6\">{label.toUpperCase()}</Typography>\r\n    </Container>\r\n  );\r\n\r\n  const submitDensity = tabs !== false && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={`${label} (${sliderVal}N)`}\r\n      onClick={handleChange(`${label} (${sliderVal}N)`)}\r\n    >\r\n      <Typography variant=\"button\">Submit Density</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 3}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{densityObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          <LightTooltip title={densityObj.nValue} placement=\"bottom\">\r\n            <Typography variant=\"subtitle1\">{densityObj.descrip}</Typography>\r\n          </LightTooltip>\r\n          {optionsTabs}\r\n          {inputSlider}\r\n          {submitDensity}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Density;\r\n","import React, { useState } from \"react\";\r\nimport { moistureObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Slide,\r\n  Typography,\r\n  Divider,\r\n  Tab,\r\n  Tabs,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Moisture = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && moistureObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {moistureObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n      {moistureObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitMoisture = value && (\r\n    <Button\r\n      value={value}\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit moisture</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 4}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{moistureObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{moistureObj.descrip}</Typography>\r\n        <Container>\r\n          {optionsTabs}\r\n          {currentDescrip}\r\n          {submitMoisture}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Moisture;\r\n","import React, { useState } from \"react\";\r\nimport { plasticityObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst Plasticity = (props) => {\r\n  const matches = useMediaQuery(\"(min-width:1500px)\");\r\n  const { step, handleChange } = props;\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && plasticityObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs\r\n      value={tabs}\r\n      onChange={handleTabs}\r\n      variant={matches ? \"fullWidth\" : \"scrollable\"}\r\n      scrollButtons=\"on\"\r\n      centered\r\n    >\r\n      {plasticityObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n      {plasticityObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitPlasticity = value && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Plasticity</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 5}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{plasticityObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{plasticityObj.descrip}</Typography>\r\n        <Container>\r\n          {optionsTabs}\r\n          {currentDescrip}\r\n          {submitPlasticity}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Plasticity;\r\n","import React, { useState } from \"react\";\r\nimport { cohesivenessObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Slide,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst Cohesiveness = (props) => {\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && cohesivenessObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {cohesivenessObj.options.map((e, index) => (\r\n        <Tab key={index} label={`${e.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n      {cohesivenessObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitCohesion = value && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Cohesiveness</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 6}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{cohesivenessObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">{cohesivenessObj.descrip}</Typography>\r\n        <Container>\r\n          {optionsTabs}\r\n          {currentDescrip}\r\n          {submitCohesion}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Cohesiveness;\r\n","import React, { useState } from \"react\";\r\nimport { sedimentaryStructureObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Slide,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst SedimentaryStructure = (props) => {\r\n  const matches = useMediaQuery(\"(min-width:1500px)\");\r\n  const { step, handleChange } = props;\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && sedimentaryStructureObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs\r\n      value={tabs}\r\n      onChange={handleTabs}\r\n      variant={matches ? \"fullWidth\" : \"scrollable\"}\r\n      scrollButtons=\"on\"\r\n    >\r\n      {sedimentaryStructureObj.options.map((k, index) => (\r\n        <Tab key={index} label={`${k.id}`} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n      {sedimentaryStructureObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitStructure = value && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit structure</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 7}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{sedimentaryStructureObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Typography variant=\"subtitle1\">\r\n          {sedimentaryStructureObj.descrip}\r\n        </Typography>\r\n        <Container>\r\n          {optionsTabs}\r\n          {currentDescrip}\r\n          {submitStructure}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default SedimentaryStructure;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { weatheringObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Slide,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n  RotateLeftRounded,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst Weathering = (props) => {\r\n  const matches = useMediaQuery(\"(min-width:1500px)\");\r\n  const { step, handleChange } = props;\r\n\r\n  //array of objects(an object for each question), with key(name) and value(arr[\"letter\", checked(bool)])\r\n  const [boxes, setBoxes] = useState();\r\n  const makeBoxes = () => {\r\n    //on page load make an object for each question/options\r\n    let start = 0;\r\n    let num = weatheringObj.questions.length;\r\n    let allQs = [];\r\n    //https://stackoverflow.com/questions/13104494/does-javascript-pass-by-reference\r\n    while (start < num) {\r\n      allQs[start] = {};\r\n      start++;\r\n    }\r\n    weatheringObj.questions.forEach((q, index) => {\r\n      let opts = q.options;\r\n      opts.forEach((o) => (allQs[index][o.name] = [o.answer, false]));\r\n    });\r\n    setBoxes(allQs);\r\n  };\r\n  //run once on load to make checkboxes values\r\n  useEffect(() => {\r\n    makeBoxes();\r\n  }, []);\r\n  const handleBoxes = (e) => {\r\n    //ie: target = \"M\"\r\n    let target = e.target.value;\r\n    let newBox = [...boxes];\r\n    let newArrVal = [];\r\n    newArrVal.push(newBox[tabs][target][0], !newBox[tabs][target][1]);\r\n    newBox[tabs][target] = newArrVal;\r\n    setBoxes(newBox);\r\n  };\r\n\r\n  const [value, setValue] = useState();\r\n  useEffect(() => {\r\n    //join each true value in each obj in boxes, with space between\r\n    let pushString = \"\";\r\n    boxes &&\r\n      boxes.forEach((o) => {\r\n        let tempStr = [];\r\n        for (let key in o) {\r\n          o[key][1] === true && tempStr.push(key[0]);\r\n        }\r\n        pushString = pushString + \" \" + tempStr.join(\"\").toUpperCase();\r\n      });\r\n    setValue(pushString);\r\n  }, [boxes]);\r\n\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleActiveTab = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  const optionsTabs = (\r\n    <Tabs\r\n      onChange={handleActiveTab}\r\n      value={tabs}\r\n      variant={matches ? \"fullWidth\" : \"scrollable\"}\r\n      scrollButtons=\"on\"\r\n    >\r\n      {weatheringObj.questions.map((k, index) => (\r\n        <Tab key={index} value={index} label={k.question} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const checkBoxes = tabs !== false && (\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup>\r\n        {weatheringObj.questions[tabs].options.map((o) => (\r\n          <div\r\n            key={o.name}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              key={o.answer}\r\n              control={\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  key={o.name}\r\n                  value={o.name}\r\n                  checked={boxes[tabs][o.name][1]}\r\n                  onChange={(e) => handleBoxes(e)}\r\n                />\r\n              }\r\n              label={\r\n                <Typography variant=\"button\">{o.name.toUpperCase()}</Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{o.descrip}</Typography>\r\n          </div>\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\">\r\n      {weatheringObj.questions[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const resetBoxes = (\r\n    <Button onClick={makeBoxes} variant=\"text\" style={{ marginBottom: \"16px\" }}>\r\n      <RotateLeftRounded />\r\n      <Typography variant=\"button\">Reset Checkboxes</Typography>\r\n    </Button>\r\n  );\r\n  const submitBoxes = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit features</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 8}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{weatheringObj.question}</Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          <Typography variant=\"subtitle1\">{weatheringObj.descrip}</Typography>\r\n          {optionsTabs}\r\n          <Container>\r\n            {currentDescrip}\r\n            {checkBoxes}\r\n          </Container>\r\n          {submitBoxes}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default Weathering;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n  Button,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst DepositionalEnv = (props) => {\r\n  const { step, outputStep, handleChange } = props;\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const pickEnv = (\r\n    <Container>\r\n      <Typography variant=\"subtitle1\">\r\n        *future version will add a dropdown component of various environments to\r\n        insert into textbox\r\n      </Typography>\r\n      <TextField\r\n        variant=\"filled\"\r\n        multiline={true}\r\n        rows=\"6\"\r\n        placeholder=\"Change Depositional Environment\"\r\n        label={outputStep.output}\r\n        onChange={handleTextFieldChange}\r\n        defaultValue={outputStep.output}\r\n      />\r\n    </Container>\r\n  );\r\n\r\n  const submitEnv = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Environment</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 9}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          Can the Depositional Environment be deduced?\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          {pickEnv}\r\n          {submitEnv}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default DepositionalEnv;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Slide,\r\n  Divider,\r\n  Button,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst StratName = (props) => {\r\n  const { step, outputStep, handleChange } = props;\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleTextFieldChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const pickStrat = (\r\n    <Container>\r\n      <Typography variant=\"subtitle1\">\r\n        *future version will add a dropdown component of various environments to\r\n        insert into textbox\r\n      </Typography>\r\n      <TextField\r\n        variant=\"filled\"\r\n        multiline={true}\r\n        rows=\"6\"\r\n        placeholder=\"Change Stratigraphic Name\"\r\n        label={outputStep.output}\r\n        onChange={handleTextFieldChange}\r\n        defaultValue={outputStep.output}\r\n      />\r\n    </Container>\r\n  );\r\n\r\n  const submitName = (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Strat Name</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 10}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">\r\n          Can the Stratigraphic Name be deduced?\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          {pickStrat}\r\n          {submitName}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default StratName;\r\n","import React, { useState } from \"react\";\r\nimport { stratContactObj } from \"../../utility/smallerObjs\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Slide,\r\n  Divider,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst StratContact = (props) => {\r\n  const { step, handleChange } = props;\r\n  const [tabs, setTabs] = useState(false);\r\n  const handleTabs = (e, newtab) => {\r\n    setTabs(newtab);\r\n  };\r\n\r\n  let value = tabs !== false && stratContactObj.options[tabs].answer;\r\n\r\n  const optionsTabs = (\r\n    <Tabs value={tabs} onChange={handleTabs} centered>\r\n      {stratContactObj.options.map((k, index) => (\r\n        <Tab key={index} label={k.name} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n\r\n  const currentDescrip = tabs !== false && (\r\n    <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n      {stratContactObj.options[tabs].descrip}\r\n    </Typography>\r\n  );\r\n\r\n  const submitContact = value && (\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      value={value}\r\n      onClick={handleChange(value)}\r\n    >\r\n      <Typography variant=\"button\">Submit Contact</Typography>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 11}>\r\n      <Paper variant=\"outlined\" elevation={7}>\r\n        <Typography variant=\"h3\">{stratContactObj.question}</Typography>\r\n        <Divider />\r\n        <Typography variant=\"subtitle1\">{stratContactObj.descrip}</Typography>\r\n        <Container>\r\n          {optionsTabs}\r\n          {currentDescrip}\r\n          {submitContact}\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default StratContact;\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  Slide,\r\n  Typography,\r\n  Divider,\r\n  Container,\r\n} from \"../../utility/themeIndex\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n    background: theme.palette.primary.main,\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(6),\r\n    paddingTop: theme.spacing(6),\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst End = (props) => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery(\"(min-width:920px)\");\r\n  const { step, generateAnswer, answer } = props;\r\n\r\n  generateAnswer();\r\n\r\n  //add dropdown to nevigate back to a step\r\n  //clicking on individual descriptor navs to that question\r\n\r\n  //add option to manually edit output answer\r\n\r\n  return (\r\n    <Slide direction=\"right\" in={step === 12}>\r\n      <Paper className={classes.expand}>\r\n        <Typography variant=\"h4\" className={classes.header}>\r\n          Your sample description is:\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Container>\r\n          <Typography variant={matches ? \"h3\" : \"h6\"}>{answer}</Typography>\r\n        </Container>\r\n      </Paper>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default End;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  AppBar,\r\n  IconButton,\r\n  MenuIcon,\r\n  Button,\r\n  RotateLeftRounded,\r\n  DoneRounded,\r\n} from \"../../utility/themeIndex\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginRight: theme.spacing(0),\r\n    },\r\n    color: theme.palette.secondary.contrastText,\r\n    marginRight: theme.spacing(2),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const matches = useMediaQuery(\"(min-width:920px)\");\r\n  const classes = useStyles();\r\n  const { toggleDrawer, title, handleReset, disableButton, toFinish } = props;\r\n\r\n  const resetButton = (\r\n    <Button onClick={handleReset} variant=\"outlined\" size=\"medium\">\r\n      <RotateLeftRounded />\r\n      {matches && (\r\n        <Typography variant=\"button\" query=\"(max-device-width: 960px)\">\r\n          Restart\r\n        </Typography>\r\n      )}\r\n    </Button>\r\n  );\r\n  const finishButton = (\r\n    <Button\r\n      onClick={toFinish}\r\n      variant=\"outlined\"\r\n      size=\"medium\"\r\n      disabled={disableButton}\r\n    >\r\n      <DoneRounded />\r\n      {matches && <Typography variant=\"button\">Finish</Typography>}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <AppBar position=\"static\" elevation={9}>\r\n      <Toolbar>\r\n        <IconButton\r\n          className={classes.menu}\r\n          onClick={toggleDrawer}\r\n          edge=\"start\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography style={{ flex: 1 }} variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        {resetButton}\r\n        {finishButton}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Toolbar,\r\n  MobileStepper,\r\n  Button,\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight,\r\n  Typography,\r\n} from \"../../utility/themeIndex\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function Header(props) {\r\n  const matches = useMediaQuery(\"(min-width:920px)\");\r\n  const { steps, activeStep, moveForward, moveBackward } = props;\r\n\r\n  const backButton = (\r\n    <Button\r\n      onClick={moveBackward}\r\n      variant=\"contained\"\r\n      disabled={activeStep === 0}\r\n    >\r\n      <KeyboardArrowLeft />\r\n      {matches && <Typography variant=\"button\">back</Typography>}\r\n    </Button>\r\n  );\r\n\r\n  const nextButton = (\r\n    <Button\r\n      onClick={moveForward}\r\n      variant=\"contained\"\r\n      disabled={activeStep === steps - 1}\r\n    >\r\n      {matches && <Typography variant=\"button\">next</Typography>}\r\n      <KeyboardArrowRight />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Toolbar disableGutters={true}>\r\n      <MobileStepper\r\n        position=\"static\"\r\n        steps={steps}\r\n        activeStep={activeStep}\r\n        nextButton={nextButton}\r\n        backButton={backButton}\r\n      />\r\n    </Toolbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  MenuOpen,\r\n  Divider,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"../../utility/themeIndex\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    color: theme.palette.secondary.contrastText,\r\n    alignSelf: \"flex-end\",\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavDrawer = (props) => {\r\n  const classes = useStyles();\r\n  const { drawer, drawerList, toggleDrawer, moveByIndex } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"persistent\" open={drawer} anchor=\"left\">\r\n      <IconButton className={classes.menu} onClick={toggleDrawer}>\r\n        <MenuOpen />\r\n      </IconButton>\r\n      <Divider style={{ backgroundColor: \"white\" }} />\r\n      <List>\r\n        {drawerList.map((text, index) => (\r\n          <ListItem button key={text} onClick={() => moveByIndex(index)}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NavDrawer;\r\n","import React, { useState } from \"react\";\r\nimport Begin from \"../pages/Begin\";\r\nimport GrainSize from \"../pages/GrainSize\";\r\nimport Color from \"../pages/Color\";\r\nimport Density from \"../pages/Density\";\r\nimport Moisture from \"../pages/Moisture\";\r\nimport Plasticity from \"../pages/Plasticity\";\r\nimport Cohesiveness from \"../pages/Cohesiveness\";\r\nimport SedimentaryStructure from \"../pages/SedimentaryStructure\";\r\nimport Weathering from \"../pages/Weathering\";\r\nimport DepositionalEnv from \"../pages/DepositionalEnv\";\r\nimport StratName from \"../pages/StratName\";\r\nimport StratContact from \"../pages/StratContact\";\r\nimport End from \"../pages/End\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport NavDrawer from \"./Drawer\";\r\n\r\nconst FormCompiler = () => {\r\n  const container = {\r\n    padding: \"0px !important\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n  //get component to render\r\n  const questionList = [\r\n    {\r\n      component: Begin,\r\n      title: \"Start\",\r\n      output: \"\",\r\n    },\r\n    { component: GrainSize, title: \"Grain Size\", output: \"\" },\r\n    { component: Color, title: \"Color\", output: \"\" },\r\n    { component: Density, title: \"Density\", output: \"\" },\r\n    { component: Moisture, title: \"Moisture\", output: \"\" },\r\n    { component: Plasticity, title: \"Plasticity\", output: \"\" },\r\n    { component: Cohesiveness, title: \"Cohesiveness\", output: \"\" },\r\n    {\r\n      component: SedimentaryStructure,\r\n      title: \"Sedimentary Structure\",\r\n      output: \"\",\r\n    },\r\n    { component: Weathering, title: \"Weathering\", output: \"\" },\r\n    {\r\n      component: DepositionalEnv,\r\n      title: \"Depositional Environment\",\r\n      output: \"\",\r\n    },\r\n    { component: StratName, title: \"Stratigraphic Name\", output: \"\" },\r\n    { component: StratContact, title: \"Stratigraphic Contact\", output: \"\" },\r\n    { component: End, title: \"Finish\", output: \"\" },\r\n  ];\r\n\r\n  //step corresponds to questionComponentList index, and therefore output index to match\r\n  const [step, setStep] = useState(0);\r\n  //end output- complete sample description\r\n  const [output, setOutput] = useState(questionList);\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  //move forward/backward functions\r\n  function moveForward() {\r\n    setStep(step + 1);\r\n  }\r\n  function moveBackward() {\r\n    setStep(step - 1);\r\n  }\r\n\r\n  function moveByIndex(i) {\r\n    setStep(i);\r\n  }\r\n  //resart question line or make new sample\r\n  function handleReset() {\r\n    setStep(0);\r\n    setOutput(questionList);\r\n  }\r\n\r\n  function toFinish() {\r\n    setStep(output.length - 1);\r\n  }\r\n\r\n  function toggleDrawer() {\r\n    setDrawer((prev) => !prev);\r\n  }\r\n\r\n  const disableButton = step === output.length - 1;\r\n\r\n  const handleChange = (input) => (e) => {\r\n    console.log(e, input);\r\n    //button vs text inputs\r\n    const val = e.currentTarget.value ? e.currentTarget.value : e.target.value;\r\n    val === undefined\r\n      ? setOutput(output, (output[step].output = \"\"))\r\n      : setOutput(output, (output[step].output = val));\r\n    moveForward();\r\n  };\r\n\r\n  const [answer, setAnswer] = useState();\r\n  function generateAnswer() {\r\n    let answer = [];\r\n    output.forEach((e) => e.output.length && answer.push(e.output));\r\n    setAnswer(answer.join(\", \").toUpperCase());\r\n  }\r\n\r\n  //dynamically renders the current question component\r\n  const currentQuestion = React.createElement(\r\n    questionList[step].component,\r\n    {\r\n      step: step,\r\n      outputStep: output[step],\r\n      handleChange: handleChange,\r\n      answer: answer,\r\n      generateAnswer: generateAnswer,\r\n      moveForward: moveForward,\r\n    },\r\n    null\r\n  );\r\n\r\n  const drawerList = [];\r\n  questionList.forEach((item) => drawerList.push(item.title));\r\n\r\n  return (\r\n    <div style={container}>\r\n      <Header\r\n        toggleDrawer={toggleDrawer}\r\n        title={output[step].title}\r\n        handleReset={handleReset}\r\n        disableButton={disableButton}\r\n        toFinish={toFinish}\r\n      />\r\n\r\n      <NavDrawer\r\n        drawerList={drawerList}\r\n        drawer={drawer}\r\n        toggleDrawer={toggleDrawer}\r\n        moveByIndex={moveByIndex}\r\n      />\r\n      {currentQuestion}\r\n\r\n      <Footer\r\n        steps={output.length}\r\n        activeStep={step}\r\n        moveForward={moveForward}\r\n        moveBackward={moveBackward}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormCompiler;\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport { green, blueGrey } from \"@material-ui/core/colors\";\r\n\r\n//https://github.com/mui-org/material-ui/issues/6939\r\n\r\nconst defaultTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[\"A700\"],\r\n      contrastText: blueGrey[800],\r\n    },\r\n    secondary: {\r\n      main: blueGrey[800],\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: defaultTheme.palette.primary,\r\n    secondary: defaultTheme.palette.secondary,\r\n    background: {\r\n      paper: defaultTheme.palette.secondary.light,\r\n      default: defaultTheme.palette.secondary.main,\r\n    },\r\n  },\r\n  spacing: defaultTheme.spacing,\r\n  typography: {\r\n    //h3: card titles\r\n    h3: {\r\n      [defaultTheme.breakpoints.down(\"sm\")]: {\r\n        fontSize: \"1.75rem\",\r\n        marginBottom: defaultTheme.spacing(1),\r\n      },\r\n      height: \"20%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      fontWeight: \"800\",\r\n      color: defaultTheme.palette.secondary.dark,\r\n    },\r\n    //grain size answer/end\r\n    h4: {\r\n      color: defaultTheme.palette.secondary.dark,\r\n      fontWeight: \"600\",\r\n    },\r\n    //h5: header/card tabs\r\n    h5: {\r\n      color: defaultTheme.palette.secondary.contrastText,\r\n    },\r\n    //h6: currentTabDescrips\r\n    h6: {\r\n      marginTop: defaultTheme.spacing(3),\r\n      marginBottom: defaultTheme.spacing(3),\r\n      fontWeight: 550,\r\n    },\r\n    //typography within button\r\n    button: {\r\n      fontWeight: 550,\r\n      color: \"inherit\",\r\n      paddingLeft: defaultTheme.spacing(1),\r\n      paddingRight: defaultTheme.spacing(1),\r\n    },\r\n    //weathering descrips\r\n    body1: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    //subt1: question descrip\r\n    subtitle1: {\r\n      [defaultTheme.breakpoints.down(\"sm\")]: {\r\n        fontSize: \"0.75rem\",\r\n        marginTop: defaultTheme.spacing(1),\r\n        marginBottom: defaultTheme.spacing(1),\r\n      },\r\n      marginTop: defaultTheme.spacing(3),\r\n      marginBottom: defaultTheme.spacing(3),\r\n      color: defaultTheme.palette.secondary.main,\r\n      fontStyle: \"italic\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiAppBar: {\r\n      root: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          paddingBottom: defaultTheme.spacing(0),\r\n        },\r\n        paddingBottom: defaultTheme.spacing(1),\r\n      },\r\n    },\r\n    MuiButton: {\r\n      //header- oulined/medium\r\n      root: {\r\n        minWidth: \"32px\",\r\n      },\r\n      outlined: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          padding: defaultTheme.spacing(0),\r\n        },\r\n        color: defaultTheme.palette.secondary.contrastText,\r\n        padding: defaultTheme.spacing(1),\r\n        marginLeft: defaultTheme.spacing(1),\r\n        borderColor: defaultTheme.palette.secondary.contrastText,\r\n        \"&:hover\": {\r\n          borderWidth: \"3px\",\r\n          borderColor: defaultTheme.palette.primary.dark,\r\n          backgroundColor: defaultTheme.palette.primary.light,\r\n        },\r\n      },\r\n      //contained: footer nav buttons\r\n      contained: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          padding: \"0px\",\r\n        },\r\n        color: defaultTheme.palette.secondary.contrastText,\r\n        backgroundColor: defaultTheme.palette.secondary.dark,\r\n        \"&:hover\": {\r\n          backgroundColor: defaultTheme.palette.secondary.light,\r\n        },\r\n        \"&$disabled\": {\r\n          color: defaultTheme.palette.secondary.light,\r\n        },\r\n      },\r\n      //submit answer button\r\n      containedSizeSmall: {\r\n        [defaultTheme.breakpoints.down(\"xs\")]: {\r\n          width: \"70%\",\r\n        },\r\n        width: \"30%\",\r\n        alignSelf: \"center\",\r\n      },\r\n      //text: subquestions in paper\r\n      text: {\r\n        width: \"30%\",\r\n        alignSelf: \"center\",\r\n        marginTop: defaultTheme.spacing(3),\r\n        border: `solid 1px ${defaultTheme.palette.primary.contrastText}`,\r\n      },\r\n    },\r\n    MuiContainer: {\r\n      root: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          padding: \"0px\",\r\n        },\r\n        flex: \"1\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginBottom: defaultTheme.spacing(3),\r\n      },\r\n    },\r\n    MuiDrawer: {\r\n      paperAnchorDockedLeft: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          width: \"75vw\",\r\n        },\r\n        width: \"25vw\",\r\n        background: defaultTheme.palette.secondary.dark,\r\n        color: defaultTheme.palette.secondary.contrastText,\r\n        borderRight: `2px solid ${defaultTheme.palette.secondary.contrastText}`,\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        padding: defaultTheme.spacing(0),\r\n        width: \"auto\",\r\n      },\r\n      button: {\r\n        borderBottom: `1px solid ${defaultTheme.palette.secondary.light}`,\r\n        \"&:hover\": {\r\n          backgroundColor: defaultTheme.palette.secondary.light,\r\n        },\r\n      },\r\n    },\r\n    MuiToolbar: {\r\n      root: {\r\n        background: defaultTheme.palette.secondary.dark,\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      //top appbar paper at elevation 9\r\n      //target questions at 7\r\n      elevation7: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          width: \"100%\",\r\n          padding: `${defaultTheme.spacing(0)}px ${defaultTheme.spacing(1)}px`,\r\n          borderRadius: \"0px\",\r\n          marginBottom: defaultTheme.spacing(0),\r\n          marginTop: defaultTheme.spacing(0),\r\n        },\r\n        [defaultTheme.breakpoints.up(\"md\")]: {\r\n          width: \"80%\",\r\n          padding: `${defaultTheme.spacing(3)}px ${defaultTheme.spacing(3)}px`,\r\n        },\r\n        [defaultTheme.breakpoints.up(\"lg\")]: {\r\n          width: \"70%\",\r\n          padding: `${defaultTheme.spacing(3)}px ${defaultTheme.spacing(6)}px`,\r\n        },\r\n        color: defaultTheme.palette.secondary.dark,\r\n        background: defaultTheme.palette.primary.main,\r\n        alignSelf: \"center\",\r\n        textAlign: \"center\",\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: defaultTheme.spacing(3),\r\n        marginBottom: defaultTheme.spacing(3),\r\n        boxShadow: `10px 10px 10px ${defaultTheme.palette.secondary.dark}, -10px -10px 10px ${defaultTheme.palette.secondary.dark}`,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          marginTop: defaultTheme.spacing(1),\r\n          marginBottom: defaultTheme.spacing(1),\r\n        },\r\n        marginTop: defaultTheme.spacing(3),\r\n        marginBottom: defaultTheme.spacing(3),\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        color: defaultTheme.palette.secondary.light,\r\n        marginBottom: defaultTheme.spacing(3),\r\n        \"& .MuiTab-textColorInherit.Mui-selected\": {\r\n          color: defaultTheme.palette.secondary.main,\r\n        },\r\n      },\r\n      indicator: {\r\n        color: defaultTheme.palette.secondary.dark,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        marginLeft: defaultTheme.spacing(1),\r\n        marginRight: defaultTheme.spacing(1),\r\n      },\r\n      wrapper: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          fontSize: defaultTheme.typography.body1.fontSize,\r\n        },\r\n        fontSize: defaultTheme.typography.h5.fontSize,\r\n        fontWeight: \"600\",\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      root: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          width: \"90%\",\r\n        },\r\n        marginTop: defaultTheme.spacing(3),\r\n        width: \"70%\",\r\n        alignSelf: \"center\",\r\n        margin: defaultTheme.spacing(3),\r\n      },\r\n    },\r\n    MuiButtonGroup: {\r\n      root: {\r\n        marginTop: defaultTheme.spacing(3),\r\n        marginBottom: defaultTheme.spacing(3),\r\n        justifyContent: \"center\",\r\n      },\r\n    },\r\n    MuiButtonBase: {\r\n      root: {\r\n        //change to 1 fixes mobilestepper\r\n        margin: defaultTheme.spacing(0),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: defaultTheme.typography.subtitle1.fontSize,\r\n      },\r\n    },\r\n    MuiMobileStepper: {\r\n      root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingLeft: defaultTheme.spacing(2),\r\n        paddingRight: defaultTheme.spacing(2),\r\n      },\r\n      dot: {\r\n        [defaultTheme.breakpoints.down(\"sm\")]: {\r\n          transform: \"scale(0)\",\r\n          margin: \"0px 0px\",\r\n        },\r\n        transform: \"scale(1.5)\",\r\n        margin: \"0px 8px\",\r\n      },\r\n    },\r\n    MuiSvgIcon: {\r\n      root: {\r\n        color: \"inherit\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;\r\n","import React from \"react\";\r\nimport FormCompiler from \"./components/parts/FormCompiler\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport theme from \"./utility/muiTheme\";\r\n\r\n//https://www.dot.ny.gov/divisions/engineering/technical-services/geotechnical-engineering-bureau/geotech-eng-repository/GDM_Ch-5_Soil_Rock_Classification.pdf\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <FormCompiler />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}